openapi: 3.0.1
info:
  description: Documentation of the Dynatrace REST API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/section-api) to read about use-cases and examples.
  title: Dynatrace Environment API
  version: "1.0"
servers:
- url: https://siz65484.live.dynatrace.com/api/v1
tags:
- description: ""
  name: Cluster version
- description: ""
  name: Anonymization
- description: ""
  name: User session query language
- description: ""
  name: Synthetic
- description: ""
  name: Maintenance window
- description: ""
  name: Topology & Smartscape - Application
- description: ""
  name: Topology & Smartscape - Custom device
- description: ""
  name: Topology & Smartscape - Host
- description: ""
  name: Topology & Smartscape - Process
- description: ""
  name: Topology & Smartscape - Process group
- description: ""
  name: Topology & Smartscape - Service
- description: ""
  name: Problem
- description: ""
  name: Threshold
- description: ""
  name: Timeseries
- description: ""
  name: Cluster time
- name: Event
paths:
  /config/clusterversion:
    get:
      operationId: getVersion
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterVersion'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Gets the current version of the cluster server.
      tags:
      - Cluster version
  /anonymize/anonymizationJobs/{requestId}:
    get:
      operationId: getStatus
      parameters:
      - in: path
        name: requestId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnonymizationProgressResult'
          description: Success. The responce body contains the status of the anonymization job.
        400:
          content: {}
          description: Failed. The input is invalid. See the response body for details.
      security:
      - UserSessionAnonymizationToken: []
      summary: Shows the progress of the specified anonymization job.
      tags:
      - Anonymization
      x-early-access: "true"
  /anonymize/anonymizationJobs:
    put:
      description: "The job anonymizes all user sessions in the specified timeframe\
        \ by masking the userID and IP address. \n\nTo identify user sessions to be\
        \ anonymized you can specify either userID, or IP address, or both. If you\
        \ specify both the **OR** logic applies. \n\nRegardless how you're identifying\
        \ the user session, both userID and IP are masked. You can't undo the anonymization.\
        \ \n\n"
      operationId: anonymize
      parameters:
      - description: The start timestamp of the user session to anonymize, in UTC milliseconds. If 0, the earliest available time is used.
        in: query
        name: startTimestamp
        schema:
          default: 0
          format: int64
          type: integer
      - description: The end timestamp of the user session to anonymize, in UTC milliseconds. If 0, the current time is used.
        in: query
        name: endTimestamp
        schema:
          default: 0
          format: int64
          type: integer
      - description: "UserID of the user to anonymize. \n\n You can specify several\
          \ IDs, in the following format: `userIds=user1&userIds=user2`."
        explode: true
        in: query
        name: userIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          IP address of the user to anonymize. All user sessions from this IP will be anonymized.

           You can specify several IPs, in a same way as user IDs.
        explode: true
        in: query
        name: ips
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnonymizationIdResult'
          description: Success. The responce body contains the ID of the anonymization job. You can use the ID to check the job status.
        400:
          content: {}
          description: Failed. The input is invalid. See the response body for details.
      security:
      - UserSessionAnonymizationToken: []
      summary: Creates user session anonymization job.
      tags:
      - Anonymization
      x-early-access: "true"
  /userSessionQueryLanguage/tree:
    get:
      operationId: getDTAQLResultAsTree
      parameters:
      - description: "The user session query to execute. The table scheme corresponds\
          \ to the definition of 'usersession'. \n \n Example:  SELECT country, city,\
          \ COUNT(*) FROM usersession GROUP BY country, city"
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: The query start time in milliseconds since January 1st, 1970. If 0, then the current time minus 2 hours is used.
        in: query
        name: startTimestamp
        schema:
          format: int64
          type: integer
      - description: The query end time in milliseconds since January 1st, 1970. If 0, then the current time is used.
        in: query
        name: endTimestamp
        schema:
          format: int64
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DtaqlResultAsTable'
          description: The result of the query.
        400:
          content: {}
          description: The query is missing.
        404:
          content: {}
          description: The query is invalid, see the query message for more information.
        999:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
          description: See the data scheme for detailed information on queries and returned values (this response code is never returned).
      security:
      - UserSessionQueryToken: []
      summary: Execute a query and receive results as a tree-structure of the requested columns if groupings are specified.
      tags:
      - User session query language
      x-beta: "true"
  /userSessionQueryLanguage/table:
    get:
      operationId: getDTAQLResultAsTable
      parameters:
      - description: "The user session query to execute. The table scheme corresponds\
          \ to the definition of 'usersession'.  \n \n Example:  SELECT country, city,\
          \ COUNT(*) FROM usersession GROUP BY country, city"
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: The query start time in milliseconds since January 1st, 1970. If 0, then the current time minus 2 hours is used.
        in: query
        name: startTimestamp
        schema:
          format: int64
          type: integer
      - description: The query end time in milliseconds since January 1st, 1970. If 0, then the current time is used.
        in: query
        name: endTimestamp
        schema:
          format: int64
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DtaqlResultAsTable'
          description: The result of the query.
        400:
          content: {}
          description: The query is missing.
        404:
          content: {}
          description: The query is invalid, see the query message for more information.
        999:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
          description: See the data scheme for detailed information on queries and returned values (this response code is never returned).
      security:
      - UserSessionQueryToken: []
      summary: Execute a query and receive results as table-structure even if groupings are specified. The result is a flat list of rows containing the requested columns.
      tags:
      - User session query language
      x-beta: "true"
  /events:
    get:
      description: As the number of uncorrelated events in an environment can be huge, this REST endpoint is limited to a maximum of 150 single events per request. This means that API consumers must use filters to further focus their queries, either on specific monitored entities or to requests that occurred during a specific time frame.
      operationId: queryEvents
      parameters:
      - description: Start of timeframe in milliseconds since Unix epoch.
        in: query
        name: from
        schema:
          format: int64
          type: integer
      - description: End of timeframe in milliseconds since Unix epoch. Default timeframe is the last 30 days
        in: query
        name: to
        schema:
          format: int64
          type: integer
      - description: Relative timeframe, back from the current time.
        in: query
        name: relativeTime
        schema:
          enum:
          - min
          - 5mins
          - 10mins
          - 15mins
          - 30mins
          - hour
          - 2hours
          - 6hours
          - day
          - 3days
          - week
          - month
          type: string
      - description: Filter the event feed based on a specific event type
        in: query
        name: eventType
        schema:
          enum:
          - CPU_SATURATED
          - MEMORY_SATURATED
          - SLOW_DISK
          - HIGH_LATENCY
          - INSUFFICIENT_DISK_QUEUE_DEPTH
          - HIGH_GC_ACTIVITY
          - MEMORY_RESOURCES_EXHAUSTED
          - THREADS_RESOURCES_EXHAUSTED
          - HIGH_CONNECTIVITY_FAILURES
          - HIGH_NETWORK_LOSS_RATE
          - PROCESS_CRASHED
          - PROCESS_UNAVAILABLE
          - OVERLOADED_STORAGE
          - HOST_SHUTDOWN
          - HIGH_DROPPED_PACKETS_RATE
          - HIGH_NETWORK_ERROR_RATE
          - HIGH_NETWORK_UTILIZATION
          - LOW_DISK_SPACE
          - CONNECTION_LOST
          - HOST_GRACEFULLY_SHUTDOWN
          - SERVICE_RESPONSE_TIME_DEGRADED
          - FAILURE_RATE_INCREASED
          - UNEXPECTED_HIGH_LOAD
          - UNEXPECTED_LOW_LOAD
          - USER_ACTION_DURATION_DEGRADATION
          - JAVASCRIPT_ERROR_RATE_INCREASED
          - ESXI_START
          - HOST_CONNECTION_LOST
          - HOST_CONNECTION_FAILED
          - HOST_MAINTENANCE
          - HOST_NO_CONNECTION
          - HOST_TIMEOUT
          - VIRTUAL_MACHINE_SHUTDOWN
          - SYNTHETIC_SLOWDOWN
          - WEB_CHECK_GLOBAL_OUTAGE
          - WEB_CHECK_LOCAL_OUTAGE
          - SYNTHETIC_AVAILABILITY
          - ELASTIC_LOAD_BALANCER_HIGH_UNHEALTHY_HOST_RATE
          - ELASTIC_LOAD_BALANCER_HIGH_FAILURE_RATE
          - ELASTIC_LOAD_BALANCER_HIGH_BACKEND_FAILURE_RATE
          - LOW_STORAGE_SPACE
          - EBS_VOLUME_HIGH_LATENCY
          - PROCESS_CUSTOM_AVAILABILITY
          - PROCESS_CUSTOM_ERROR
          - PROCESS_CUSTOM_PERFORMANCE
          - PROCESS_LOG_AVAILABILITY
          - PROCESS_LOG_ERROR
          - PROCESS_LOG_PERFORMANCE
          - LOG_AVAILABILITY
          - LOG_ERROR
          - LOG_PERFORMANCE
          - MOBILE_APP_CRASH_RATE_INCREASED
          - CUSTOM_APP_CRASH_RATE_INCREASED
          - PGI_HAPROXY_QUEUED_REQUESTS_HIGH
          - PGI_HAPROXY_SESSION_USAGE_HIGH
          - PGI_MYSQL_SLOW_QUERIES_RATE_HIGH
          - PGI_OF_SERVICE_UNAVAILABLE
          - HOST_OF_SERVICE_UNAVAILABLE
          - RDS_OF_SERVICE_UNAVAILABLE
          - HOST_LOG_ERROR
          - HOST_LOG_AVAILABILITY
          - HOST_LOG_PERFORMANCE
          - DOCKER_MEMORY_SATURATION
          - OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE
          - OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE
          - HOST_DATASTORE_LOW_DISK_SPACE
          - OPENSTACK_KEYSTONE_UNHEALTHY
          - OPENSTACK_KEYSTONE_SLOW
          - PGI_RMQ_HIGH_MEM_USAGE
          - PGI_RMQ_HIGH_FILE_DESC_USAGE
          - PGI_RMQ_HIGH_SOCKETS_USAGE
          - PGI_RMQ_HIGH_PROCESS_USAGE
          - PGI_RMQ_LOW_DISK_SPACE
          - RDS_RESTART_SEQUENCE
          - LAMBDA_FUNCTION_HIGH_ERROR_RATE
          - CUSTOM_ALERT
          - PROCESS_GROUP_LOW_INSTANCE_COUNT
          - PERFORMANCE_EVENT
          - ERROR_EVENT
          - AVAILABILITY_EVENT
          - RESOURCE_CONTENTION
          - DATABASE_CONNECTION_FAILURE
          - HOST_DISK_LOW_INODES
          - CUSTOM_ANNOTATION
          - CUSTOM_DEPLOYMENT
          - CUSTOM_CONFIGURATION
          - APPLICATION_JS_FRAMEWORK_DETECTED
          - HOST_LOG_MATCHED
          - LOG_MATCHED
          - CUSTOM_INFO
          - MONITORING_UNAVAILABLE
          type: string
      - description: Only receive events for a given monitored entity, such as a host, process, or service
        in: query
        name: entityId
        schema:
          type: string
      - description: If a query returns a cursor string this string can be used to fetch the next 150 events of a query.Note that there is no need to specify additional parameters (for instance eventType, from or to) as the cursor string already contains all these parameters
        in: query
        name: cursor
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventQueryResult'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Delivers a collection of events that fit the given filters
      tags:
      - Event
    post:
      description: |-
        The events REST endpoint enables 3rd party integrations to push custom events to one or more monitored entities via the API. The intent of this interface is to allow 3rd party systems, such as CI platforms (Jenkins, Bamboo, Electric Cloud, etc.) to provide additional detail for Dynatrace automated root cause analysis.
        The events API offers a set of semantically predefined event types that allow the Dynatrace problem correlation engine to correctly handle information provided by external systems. The predefined semantics of these event types allows for more precise root cause detection.
      operationId: postNaturalEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventPushMessage'
        required: false
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventStoreResult'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Pushes custom events to one or more monitored entities.
      tags:
      - Event
  /events/{eventId}:
    get:
      operationId: getEventById
      parameters:
      - description: Unique environment identifier for a specific event
        in: path
        name: eventId
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRestEntry'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Delivers a single Event by its ID
      tags:
      - Event
  /synthetic/ext/events:
    post:
      operationId: pushEvents
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExternalSyntheticEvents'
        description: JSON body of the request, containing external Synthetic events.
        required: true
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - ExternalSynthetic: []
      summary: Pushes information about external Synthetic events to Dynatrace.
      tags:
      - Synthetic
      x-early-access: "true"
  /synthetic/ext/stateModifications:
    post:
      operationId: pushStateModification
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/StateModification'
        description: JSON body of the request, containing new operational status of external Synthetic monitors.
        required: true
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                enum:
                - ACTIVE
                - INACTIVE
                - HIDDEN
                type: string
          description: successful operation
      security:
      - ExternalSynthetic: []
      summary: Modifies the operation state of all external monitors.
      tags:
      - Synthetic
      x-early-access: "true"
  /synthetic/ext/tests:
    post:
      operationId: testResults
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ExternalSyntheticTests'
        description: JSON body of the request, containing external Synthetic tests, locations, and test results.
        required: true
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                enum:
                - ACTIVE
                - INACTIVE
                - HIDDEN
                type: string
          description: successful operation
      security:
      - ExternalSynthetic: []
      summary: Pushes information about external Synthetic tests, locations, and test results to Dynatrace.
      tags:
      - Synthetic
      x-early-access: "true"
  /maintenance:
    get:
      operationId: getAllMaintenanceWindowConfigs
      parameters:
      - description: "The start timestamp of the inquiry timeframe, in UTC milliseconds.\
          \ \n\n If 0 or missing, the current time is used."
        in: query
        name: from
        schema:
          default: 0
          format: int64
          type: integer
      - description: "The end timestamp of the inquiry timeframe, in UTC milliseconds.\
          \ \n\n If 0 or missing, all maintenance windows beginning after the `from`\
          \ timestamp will be returned."
        in: query
        name: to
        schema:
          default: 0
          format: int64
          type: integer
      - description: "The type of the maintenance window to return. \n\n If `Unknown`\
          \ or missing, all maintenance windows are returned."
        in: query
        name: type
        schema:
          default: Unknown
          enum:
          - Unknown
          - Planned
          - Unplanned
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MaintenanceWindow'
                type: array
          description: successful operation
      security:
      - MaintenanceWindowToken: []
      summary: Lists all parameters of all maintenance windows available in your Dynatrace environment.
      tags:
      - Maintenance window
    post:
      operationId: storeMaintenanceWindowConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceWindow'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - MaintenanceWindowToken: []
      summary: Creates a new or updates an existing maintenance window.
      tags:
      - Maintenance window
  /maintenance/{uid}:
    delete:
      operationId: removeMaintenanceWindowConfig
      parameters:
      - description: The ID of the maintenance window to be deleted.
        in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - MaintenanceWindowToken: []
      summary: Deletes a specified maintenance window. Deletion cannot be undone.
      tags:
      - Maintenance window
    get:
      operationId: getMaintenanceWindowConfig
      parameters:
      - in: path
        name: uid
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceWindow'
          description: successful operation
      security:
      - MaintenanceWindowToken: []
      summary: Lists all parameters of the specified maintenance window.
      tags:
      - Maintenance window
  /entity/infrastructure/custom/{entityAlias}:
    post:
      operationId: createCustomDataPoints
      parameters:
      - description: "ID of the custom device. \n\nIf you use the ID of an existing\
          \ device, the respective parameters will be updated."
        in: path
        name: entityAlias
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/CustomDevicePushMessage'
        description: JSON body of the request containing entity's parameters.
        required: false
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/CustomDevicePushResult'
          description: Successfully created custom entity
      security:
      - DataExportToken: []
      summary: Creates/updates a custom device, or reports metric data points to the custom device.
      tags:
      - Topology & Smartscape - Custom device
  /entity/infrastructure/hosts/{meIdentifier}:
    get:
      operationId: getSingleHost
      parameters:
      - description: "Dynatrace entity ID of the host you're inquiring. \n\nYou can\
          \ find it in the URL of the corresponding host page, for example, `HOST-007`."
        in: path
        name: meIdentifier
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Host'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Gets parameters of the specified host
      tags:
      - Topology & Smartscape - Host
    post:
      operationId: updateHost
      parameters:
      - description: "Dynatrace entity ID of the host to be updated. \n\nYou can find\
          \ it in the URL of the corresponding host page, for example, `HOST-007`."
        in: path
        name: meIdentifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateEntity'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - DataExportToken: []
      summary: Updates properties of the specified host
      tags:
      - Topology & Smartscape - Host
  /entity/infrastructure/hosts:
    get:
      description: You can narrow down the output by specifying filtering parameters of the request.
      operationId: getHosts
      parameters:
      - description: "Start timestamp of the requested timeframe, in milliseconds\
          \ (UTC). \n\nIf not set, then 72 hours behind from now is used."
        in: query
        name: startTimestamp
        schema:
          format: int64
          type: integer
      - description: "Start timestamp of the requested timeframe, in milliseconds\
          \ (UTC). \n\nIf not set, then now is used."
        in: query
        name: endTimestamp
        schema:
          format: int64
          type: integer
      - description: Relative timeframe, back from now.
        in: query
        name: relativeTime
        schema:
          enum:
          - min
          - 5mins
          - 10mins
          - 15mins
          - 30mins
          - hour
          - 2hours
          - 6hours
          - day
          - 3days
          - week
          - month
          type: string
      - description: "Filters the resulting set of hosts by the specified tag. \n\n\
          \ A host has to match ALL specified tags."
        explode: true
        in: query
        name: tag
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Include/exclude monitoring canditate to the response. \n\nMonitoring\
          \ candidates are network entities, which are detected but not monitored."
        in: query
        name: showMonitoringCandidates
        schema:
          type: boolean
      - description: Only return specified hosts.
        explode: true
        in: query
        name: entity
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Host'
                type: array
          description: successful operation
      security:
      - DataExportToken: []
      summary: Lists all available hosts in your environment
      tags:
      - Topology & Smartscape - Host
  /entity/infrastructure/process-groups/{meIdentifier}:
    get:
      operationId: getSingleProcessGroup
      parameters:
      - description: "Dynatrace entity ID of the process group you're inquiring. \n\
          \nYou can find it in the URL of the corresponding process group page, for\
          \ example, `PROCESS_GROUP_INSTANCE-007`."
        in: path
        name: meIdentifier
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProcessGroup'
          description: successful operation
      security:
      - DataExportToken: []
      summary: List properties of the specified process group
      tags:
      - Topology & Smartscape - Process group
    post:
      operationId: updateProcessGroup
      parameters:
      - description: "Dynatrace entity ID of the process group to be updated. \n\n\
          You can find it in the URL of the corresponding process group page, for\
          \ example, `PROCESS_GROUP_INSTANCE-007`."
        in: path
        name: meIdentifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateEntity'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - DataExportToken: []
      summary: Updates properties of the specified process group
      tags:
      - Topology & Smartscape - Process group
  /entity/infrastructure/process-groups:
    get:
      description: You can narrow down the output by specifying filtering paramters of the request.
      operationId: getProcessGroups
      parameters:
      - description: "Start timestamp of the requested timeframe, in milliseconds\
          \ (UTC). \n\nIf not set, then 72 hours behind from now is used."
        in: query
        name: startTimestamp
        schema:
          format: int64
          type: integer
      - description: "End timestamp of the requested timeframe, in milliseconds (UTC).\
          \ \n\nIf not set, then now is used."
        in: query
        name: endTimestamp
        schema:
          format: int64
          type: integer
      - description: Relative timeframe, back from now.
        in: query
        name: relativeTime
        schema:
          enum:
          - min
          - 5mins
          - 10mins
          - 15mins
          - 30mins
          - hour
          - 2hours
          - 6hours
          - day
          - 3days
          - week
          - month
          type: string
      - description: "Filters the resulting set of processes by the specified tags.\
          \ \n\n A process group has to match ALL specified tags."
        explode: true
        in: query
        name: tag
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only return specified process groups.
        explode: true
        in: query
        name: entity
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ProcessGroup'
                type: array
          description: successful operation
      security:
      - DataExportToken: []
      summary: Lists all process groups of your environment, along with their parameters
      tags:
      - Topology & Smartscape - Process group
  /entity/infrastructure/processes:
    get:
      description: You can narrow down the output by specifying filtering parameters of the request.
      operationId: getProcesses
      parameters:
      - description: "Start timestamp of the requested timeframe, in milliseconds\
          \ (UTC). \n\n72 hours from now is used if the value is not set."
        in: query
        name: startTimestamp
        schema:
          format: int64
          type: integer
      - description: "End timestamp of the requested timeframe, in milliseconds (UTC).\
          \ \n\nThe current timestamp is used if the value is not set."
        in: query
        name: endTimestamp
        schema:
          format: int64
          type: integer
      - description: Relative timeframe, back from now.
        in: query
        name: relativeTime
        schema:
          enum:
          - min
          - 5mins
          - 10mins
          - 15mins
          - 30mins
          - hour
          - 2hours
          - 6hours
          - day
          - 3days
          - week
          - month
          type: string
      - description: "Filters the resulting set of processes by the specified tag.\
          \ \n\n A process has to match ALL specified tags."
        explode: true
        in: query
        name: tag
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only return specified processes.
        explode: true
        in: query
        name: entity
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Filters processes by the host they're running at. \n\nSpecify\
          \ tags of the host you're interested in."
        explode: true
        in: query
        name: hostTag
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Filters processes by the host they're running at. \n\nSpecify\
          \ Dynatrace IDs of the host you're interested in."
        explode: true
        in: query
        name: host
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters processes by the actual monitoring state of the process.
        in: query
        name: actualMonitoringState
        schema:
          enum:
          - ON
          - OFF
          type: string
      - description: Filters processes by the expected monitoring state of the process.
        in: query
        name: expectedMonitoringState
        schema:
          enum:
          - ON
          - OFF
          type: string
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ProcessGroupInstance'
                type: array
          description: successful operation
      security:
      - DataExportToken: []
      summary: List all monitored processes along with their parameters
      tags:
      - Topology & Smartscape - Process
  /entity/infrastructure/processes/{meIdentifier}:
    get:
      operationId: getSingleProcess
      parameters:
      - description: "Dynatrace entity ID of the process you're inquiring. \n\nYou\
          \ can find it in the URL of the corresponding process page, for example,\
          \ `PROCESS_INSTANCE-007`."
        in: path
        name: meIdentifier
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProcessGroupInstance'
          description: successful operation
      security:
      - DataExportToken: []
      summary: List properties of the specified process
      tags:
      - Topology & Smartscape - Process
  /entity/applications/{meIdentifier}:
    get:
      operationId: getSingleApplication
      parameters:
      - description: "Dynatrace entity ID of the application you're inquiring. \n\n\
          You can find them in the URL of the corresponding application page, for\
          \ example, `APPLICATION-007`."
        in: path
        name: meIdentifier
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Application'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Gets parameters of the specified application
      tags:
      - Topology & Smartscape - Application
    post:
      operationId: updateApplication
      parameters:
      - description: "Dynatrace entity ID of the application to be updated. \n\nYou\
          \ can find them in the URL of the corresponding application page, for example,\
          \ `APPLICATION-007`."
        in: path
        name: meIdentifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateEntity'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - DataExportToken: []
      summary: Updates parameters of the specified application
      tags:
      - Topology & Smartscape - Application
  /entity/applications:
    get:
      description: You can optionally specify timeframe, to filter the output only to applications, active in specified time.
      operationId: getApplications
      parameters:
      - description: "Start timestamp of the requested timeframe, in milliseconds\
          \ (UTC). \n\nIf no timeframe specified the 72 hours behind from now is used."
        in: query
        name: startTimestamp
        schema:
          format: int64
          type: integer
      - description: "End timestamp of the requested timeframe, in milliseconds (UTC).\
          \ \n\nIf no timeframe specified then now is used."
        in: query
        name: endTimestamp
        schema:
          format: int64
          type: integer
      - description: 'Relative timeframe, back from now. '
        in: query
        name: relativeTime
        schema:
          enum:
          - min
          - 5mins
          - 10mins
          - 15mins
          - 30mins
          - hour
          - 2hours
          - 6hours
          - day
          - 3days
          - week
          - month
          type: string
      - description: "Filters the resulting set of applications by the specified tag.\
          \ \n\n An application has to match ALL specified tags."
        explode: true
        in: query
        name: tag
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only return specified applications.
        explode: true
        in: query
        name: entity
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: successful operation
      security:
      - DataExportToken: []
      summary: Gets the list of all applications in your environment along with their parameters
      tags:
      - Topology & Smartscape - Application
  /entity/services:
    get:
      description: You can narrow down the output by specifying filtering parameters of the request.
      operationId: getServices
      parameters:
      - description: "Start timestamp of the requested timeframe, in milliseconds\
          \ (UTC). \n\n72 hours from now is used if the value is not set."
        in: query
        name: startTimestamp
        schema:
          format: int64
          type: integer
      - description: "End timestamp of the requested timeframe, in milliseconds (UTC).\
          \ \n\nThe current timestamp is used if the value is not set."
        in: query
        name: endTimestamp
        schema:
          format: int64
          type: integer
      - description: Relative timeframe, back from now.
        in: query
        name: relativeTime
        schema:
          enum:
          - min
          - 5mins
          - 10mins
          - 15mins
          - 30mins
          - hour
          - 2hours
          - 6hours
          - day
          - 3days
          - week
          - month
          type: string
      - description: "Filters the response by the specified tag. \n\n A service has\
          \ to match ALL specified tags."
        explode: true
        in: query
        name: tag
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters the response to the specified services only.
        explode: true
        in: query
        name: entity
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Service'
                type: array
          description: successful operation
      security:
      - DataExportToken: []
      summary: Lists all available services in your environment
      tags:
      - Topology & Smartscape - Service
  /entity/services/{meIdentifier}:
    get:
      operationId: getSingleService
      parameters:
      - description: "Dynatrace entity ID of the service you're inquiring. \n\nYou\
          \ can find it in the URL of the corresponding host page, for example, `SERVICE-007`."
        in: path
        name: meIdentifier
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Service'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Gets parameters of the specified service
      tags:
      - Topology & Smartscape - Service
    post:
      operationId: updateService
      parameters:
      - description: "Dynatrace entity ID of the service you're inquiring. \n\nYou\
          \ can find it in the URL of the corresponding service page, for example,\
          \ `SERVICE-007`."
        in: path
        name: meIdentifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/UpdateEntity'
        required: false
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - DataExportToken: []
      summary: Updates parameters of the specified service
      tags:
      - Topology & Smartscape - Service
  /problem/details/{problemId}/comments:
    get:
      operationId: getComment
      parameters:
      - description: The ID of the problem where you want to read the comments.
        in: path
        name: problemId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProblemCommentList'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Gets all the comments for the specified problem.
      tags:
      - Problem
    post:
      operationId: pushComment
      parameters:
      - description: The ID of the problem where you want to add the comment.
        in: path
        name: problemId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProblemComment'
        description: JSON body of the request, containing the comment information.
        required: false
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProblemComment'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Adds a new comment to the specified problem.
      tags:
      - Problem
  /problem/details/{problemId}:
    get:
      operationId: getDetails
      parameters:
      - description: The ID of the problem you're inquiring.
        in: path
        name: problemId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProblemDetailsResultWrapper'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Gets the details about the specified problem.
      tags:
      - Problem
  /problem/details/{problemId}/comments/{commentId}:
    delete:
      operationId: deleteComment
      parameters:
      - description: The ID of the problem where you want to delete the comment.
        in: path
        name: problemId
        required: true
        schema:
          format: int64
          type: integer
      - description: The ID of the comment to be deleted.
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - DataExportToken: []
      summary: Deletes an existing comment of the specified problem.
      tags:
      - Problem
    put:
      operationId: updateComment
      parameters:
      - description: The ID of the problem where you want to edit the comment.
        in: path
        name: problemId
        required: true
        schema:
          format: int64
          type: integer
      - description: The ID of the comment you want to edit.
        in: path
        name: commentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ProblemComment'
        description: JSON body of the request, containing the updated comment information.
        required: false
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProblemComment'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Updates an existing comment for the specified problem.
      tags:
      - Problem
  /problem/status:
    get:
      description: Lists the number of open problems, split by impact level.
      operationId: getProblemStatus
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProblemStatusResultWrapper'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Gets the number of current problems.
      tags:
      - Problem
  /problem/feed:
    get:
      description: Lists problems observed within a relative time along with problem's properties, plus the count of monitored entities for each impact level.
      operationId: getFeed
      parameters:
      - description: Relative timeframe, back from the current time.
        in: query
        name: relativeTime
        schema:
          enum:
          - min
          - 5mins
          - 10mins
          - 15mins
          - 30mins
          - hour
          - 2hours
          - 6hours
          - day
          - 3days
          - week
          - month
          type: string
      - description: Start timestamp of the requested timeframe, in milliseconds (UTC). The start time must be earlier than the end time.
        in: query
        name: startTimestamp
        schema:
          format: int64
          type: integer
      - description: "End timestamp of the requested timeframe, in milliseconds (UTC).\
          \ End time must be later than the start time. \n\nIf `endTimestamp` is later\
          \ than the current time, Dynatrace automatically uses current time instead."
        in: query
        name: endTimestamp
        schema:
          format: int64
          type: integer
      - description: Filters the result problems by the status.
        in: query
        name: status
        schema:
          enum:
          - OPEN
          - CLOSED
          type: string
      - description: Filters the result problems by the impact level.
        in: query
        name: impactLevel
        schema:
          enum:
          - INFRASTRUCTURE
          - SERVICE
          - APPLICATION
          - ENVIRONMENT
          type: string
      - description: Filters the result problems by the severity level.
        in: query
        name: severityLevel
        schema:
          enum:
          - AVAILABILITY
          - ERROR
          - PERFORMANCE
          - RESOURCE_CONTENTION
          - CUSTOM_ALERT
          - MONITORING_UNAVAILABLE
          type: string
      - description: Filters the result problems by the tags of affected entities.
        explode: true
        in: query
        name: tag
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Chooses to have rankedEvents exposed in a problem feed
        in: query
        name: expandDetails
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ProblemFeedResultWrapper'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Gets the information about problems within the specified timeframe.
      tags:
      - Problem
  /thresholds:
    get:
      operationId: readCustomThresholds
      parameters:
      - description: Filters thresholds by the source.
        in: query
        name: filter
        schema:
          enum:
          - ALL
          - WEB_UI
          - PLUGIN
          - REMOTE_PLUGIN
          - API
          - USER_INTERACTION
          type: string
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Threshold'
                type: array
          description: successful operation
      security:
      - DataExportToken: []
      summary: Gets all configured thresholds for plugins and custom events in a monitored environment.
      tags:
      - Threshold
  /thresholds/{thresholdId}:
    delete:
      operationId: deleteCustomThreshold
      parameters:
      - description: The ID of the threshold to be deleted.
        in: path
        name: thresholdId
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - DataExportToken: []
      summary: Deletes the specified threshold.
      tags:
      - Threshold
    put:
      operationId: createCustomThreshold
      parameters:
      - description: ID of the threshold to be created or updated.
        in: path
        name: thresholdId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/ThresholdRegistrationMessage'
        description: JSON body of the request, containing threshold parameters.
        required: false
      responses:
        201:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Threshold'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Creates or updates an existing threshold for a plugin or a custom event.
      tags:
      - Threshold
  /timeseries:
    get:
      description: You can specify filtering paramters to return only matched metrics. If no parameters are specified, the call will list all the defined and exposed metrics.
      operationId: getAllTimeseriesDefinitions
      parameters:
      - description: Metric type. Allowed values are `BUILTIN`, `PLUGIN`, and `CUSTOM`.
        in: query
        name: source
        schema:
          enum:
          - ALL
          - PLUGIN
          - REMOTE_PLUGIN
          - BUILTIN
          - CUSTOM
          type: string
      - description: The feature, where metrics originate, such as Synthetic or RUM.
        in: query
        name: detailedSource
        schema:
          type: string
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TimeseriesDefinition'
                type: array
          description: successful operation
      security:
      - DataExportToken: []
      summary: Lists all metric definitions, along with parameters of each metric.
      tags:
      - Timeseries
  /timeseries/{timeseriesIdentifier}:
    delete:
      operationId: deleteCustomTimeseries
      parameters:
      - description: The ID of the metric to be deleted.
        in: path
        name: timeseriesIdentifier
        required: true
        schema:
          type: string
      responses:
        default:
          content: {}
          description: successful operation
      security:
      - DataExportToken: []
      summary: Deletes a custom metric.
      tags:
      - Timeseries
    get:
      description: "To obtain data points, set **includeData** to `true`. \n\nYou\
        \ can obtain either data points or the scalar result of the specified timeseries,\
        \ depending on the **queryMode**. \n\nTo obtain data points you must specify\
        \ the timeframe, either as **relativeTime** or as combination of **startTimestamp**\
        \ and **endTimestamp**. You must also provide **aggregationType**, supported\
        \ by the metric."
      operationId: readTimeseriesData
      parameters:
      - description: Case-sensitive identifier of the timeseries, where you want to read parameters and data points.
        in: path
        name: timeseriesIdentifier
        required: true
        schema:
          type: string
      - description: "Flag to include data points to the response. \n\n To obtain\
          \ data points you must specify the timeframe and aggregation type."
        in: query
        name: includeData
        schema:
          type: boolean
      - description: "The aggregation type for the resulting data points. \n\nIf the\
          \ requested metric doesn't support the specified aggregation, the request\
          \ will result in an error."
        in: query
        name: aggregationType
        schema:
          enum:
          - MIN
          - MAX
          - SUM
          - AVG
          - MEDIAN
          - COUNT
          - PERCENTILE
          type: string
      - description: Start timestamp of the requested timeframe, in milliseconds (UTC). The start time must be earlier than the end time.
        in: query
        name: startTimestamp
        schema:
          format: int64
          type: integer
      - description: "End timestamp of the requested timeframe, in milliseconds (UTC).\
          \ End time must be later than the start time. \n\nIf later than the current\
          \ time, Dynatrace automatically uses current time instead."
        in: query
        name: endTimestamp
        schema:
          format: int64
          type: integer
      - description: Used to predict future data points.
        in: query
        name: predict
        schema:
          type: boolean
      - description: Relative timeframe, back from the current time.
        in: query
        name: relativeTime
        schema:
          enum:
          - min
          - 5mins
          - 10mins
          - 15mins
          - 30mins
          - hour
          - 2hours
          - 6hours
          - day
          - 3days
          - week
          - month
          type: string
      - description: "The type of result that the call should return. Valid result\
          \ modes are: \n`series`: returns all the data points of the timeseries in\
          \ specified timeframe. \n`total`: returns one scalar value for the specified\
          \ timeframe. \n\nBy default, the `series` mode is used."
        in: query
        name: queryMode
        schema:
          enum:
          - SERIES
          - TOTAL
          type: string
      - description: "Filters requested data points by entity which should deliver\
          \ them. \n\nAllowed values are Dynatrace entity IDs. You can find them in\
          \ the URL of the corresponding Dynatrace entity page, for example, `HOST-007`.\
          \ \n\nIf the selected entity doesn't support the requested timeseries, the\
          \ request will result in an error."
        explode: true
        in: query
        name: entity
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Filters the resulting set of applications by the specified tag.\
          \ \n\nUse multiple tag parameters to combine multiple tag filters using\
          \ the logical operator AND. \n\nIn case of key-value tags, such as imported\
          \ AWS or CloudFoundry tags use following format: `[context]key:value`."
        explode: true
        in: query
        name: tag
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "In case of the percentile aggregation type, this parameter specifies\
          \ which percentile of the selected response time metric should be delivered.\
          \ Valid values for percentile are between 1 and 99. \n\nPlease keep in mind\
          \ that percentile export is only possible for response-time based metrics\
          \ such as application and service response times."
        in: query
        name: percentile
        schema:
          format: int32
          type: integer
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TimeseriesQueryResult'
                type: array
          description: successful operation
      security:
      - DataExportToken: []
      summary: Gets the parameters of the specified metric and optionally data points.
      tags:
      - Timeseries
    post:
      description: Provides advanced filtering possibilities, comparing to the `GET /timeseries/{metricIdentifier}` request.
      operationId: readTimeseriesComplex
      parameters:
      - description: Case-sensitive identifier of the timeseries, where you want to read parameters and data points.
        in: path
        name: timeseriesIdentifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TimeseriesQueryMessage'
        description: JSON body of the request, containing parameters to identify the required data points.
        required: false
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TimeseriesQueryResultWrapper'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Lists all available metric data points, matching specified parameters.
      tags:
      - Timeseries
    put:
      operationId: createCustomTimeseries
      parameters:
      - description: "The ID for the new metric. It must start with the `custom:`\
          \ prefix. \n\nIf you use the ID of an existing metric the respective parameters\
          \ will be updated."
        in: path
        name: timeseriesIdentifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/TimeseriesRegistrationMessage'
        description: The body of the request, containing metric parameters.
        required: false
      responses:
        200:
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/TimeseriesDefinition'
          description: successful operation
      security:
      - DataExportToken: []
      summary: Creates a new custom metric.
      tags:
      - Timeseries
  /time:
    get:
      operationId: getCurrentClusterTime
      responses:
        200:
          content:
            text/plain:
              schema:
                format: int64
                type: integer
          description: successful operation
      summary: Gets the current cluster time in UTC milliseconds.
      tags:
      - Cluster time
components:
  schemas:
    SyntheticTestStepResult:
      description: Results of individual test steps.
      example:
        id: 3
        responseTimeMillis: 4
        error:
          code: 7
          message: message
        startTimestamp: 2
      properties:
        id:
          description: ID of the step. It is unique within the test definition.
          format: int64
          type: integer
        startTimestamp:
          description: Timestamp of text step execution, UTC milliseconds.
          format: int64
          type: integer
        responseTimeMillis:
          description: "The response time of the step, milliseconds. \n\n Absent when\
            \ no meaningful response time available as may be the case for certain\
            \ error conditions such as a misconfigured step script."
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/SyntheticStepError'
      required:
      - id
      - startTimestamp
      type: object
    SyntheticLocation:
      description: Synthetic location.
      example:
        ip: ip
        name: name
        id: id
      properties:
        id:
          description: Unique ID of the location.
          type: string
        name:
          description: Location name displayed in the UI.
          type: string
        ip:
          description: IP address of the location.
          type: string
      required:
      - id
      - ip
      type: object
    ThresholdRegistrationMessage:
      description: Parameters of a single plugin or custom event threshold.
      example:
        thresholdId: tooManyCoffeesMade
        timeseriesId: received.coffees
        threshold: 10000.0
        alertCondition: ABOVE
        samples: 1
        violatingSamples: 1
        dealertingSamples: 1
        eventType: AVAILABILITY_EVENT
        eventName: Too many coffees made
        description: The coffee machine must not produce a number of coffees {alert_condition} {threshold}.
        enabled: true
      properties:
        thresholdId:
          description: Unique ID of the threshold.
          type: string
        timeseriesId:
          description: "Case-sensitive identifier of the metric evaluated by threshold.\
            \ \n\n You can use it to find the metric via the `timeseries` endpoint\
            \ of the API."
          type: string
        threshold:
          description: The value of the threshold.
          format: double
          type: number
        alertCondition:
          description: 'Condition for the threshold value check: above or below.'
          enum:
          - ABOVE
          - BELOW
          type: string
        samples:
          description: The number of one-minute samples that form sliding evaluation window.
          format: int32
          type: integer
        violatingSamples:
          description: How many one-minute samples within the evaluation window should violate the threshold to trigger an event.
          format: int32
          type: integer
        dealertingSamples:
          description: How many one-minute samples within the evaluation window should go back to normal to close the event.
          format: int32
          type: integer
        eventType:
          description: The type of the event to trigger on the threshold violation.
          enum:
          - AVAILABILITY_EVENT
          - ERROR_EVENT
          - PERFORMANCE_EVENT
          type: string
        eventName:
          description: The human-readable name of the event
          type: string
        description:
          description: "Desription of the event, triggered by a threshold violation.\
            \ \n\n You can use the following placeholders: \n{severity}: the actual\
            \ metric value,\n {alert_condition}: above or below threshold condition,\
            \ \n{threshold}: the threshold value,{violating_samples}: the amount of\
            \ samples, violating the threshold, \n{dimensions}: metric's dimension\
            \ that violated the threshold."
          type: string
        enabled:
          description: Threshold is enabled/disabled.
          type: boolean
      type: object
    MaintenanceWindowRecurrence:
      description: Object defining recurrence of the maintenance window.
      example:
        duration: 6
        dayOfMonth: 0
        start: start
        day: MONDAY
      properties:
        day:
          description: "The day of the week for weekly maintenance. \n\n The format\
            \ is the full name of the day in upper case, for example `WEDNESDAY`."
          enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
          type: string
        dayOfMonth:
          description: The day of the month for monthly maintenance.
          format: int32
          type: integer
        start:
          description: Time of the maintenance window start. The format is `HH:mm`.
          type: string
        duration:
          description: Duration of the maintenance window in minutes.
          format: int32
          type: integer
      required:
      - duration
      - start
      type: object
    AgentVersion:
      description: Defines the version of the agent currently running on the entity.
      example:
        major: 5
        minor: 2
        sourceRevision: sourceRevision
        revision: 7
        timestamp: timestamp
      properties:
        major:
          description: The major version number.
          format: int32
          type: integer
        minor:
          description: The minor version number.
          format: int32
          type: integer
        revision:
          description: The revision number.
          format: int32
          type: integer
        sourceRevision:
          description: A string representation of the SVN revision number.
          type: string
        timestamp:
          description: 'A timestamp string: format "yyyymmdd-hhmmss'
          type: string
      type: object
    ProblemDetailsResultWrapper:
      example:
        result:
          tagsOfAffectedEntities:
          - context: CONTEXTLESS
            value: value
            key: key
          - context: CONTEXTLESS
            value: value
            key: key
          displayName: displayName
          commentCount: 1
          affectedCounts: '{}'
          hasRootCause: true
          impactLevel: INFRASTRUCTURE
          severityLevel: AVAILABILITY
          rankedImpacts:
          - impactLevel: INFRASTRUCTURE
            severityLevel: AVAILABILITY
            entityName: entityName
            entityId: entityId
            eventType: CPU_SATURATED
          - impactLevel: INFRASTRUCTURE
            severityLevel: AVAILABILITY
            entityName: entityName
            entityId: entityId
            eventType: CPU_SATURATED
          recoveredCounts: '{}'
          startTime: 0
          id: id
          endTime: 6
          rankedEvents:
          - deploymentProject: deploymentProject
            cpuLimitInMHz: 7
            deploymentParamAdded: deploymentParamAdded
            isClusterWide: true
            source: source
            effectiveEntity: effectiveEntity
            operatingSystem: operatingSystem
            artifact: artifact
            severityLevel: AVAILABILITY
            cpuLoad: 9.301444
            affectedRequestsPerMinute: 3.6160767
            entityName: entityName
            annotationDescription: annotationDescription
            browser: INFRASTRUCTURE
            affectedSyntheticLocations:
            - affectedSyntheticLocations
            - affectedSyntheticLocations
            startTime: 5
            deploymentName: deploymentName
            deploymentParamRemoved: deploymentParamRemoved
            userDefined50thPercentileThreshold: 2.027123
            serviceMethodGroup: serviceMethodGroup
            referenceResponseTime90thPercentile: 4.145608
            isRootCause: true
            userAction: userAction
            minimumProcessGroupInstanceCountThreshold: 7
            referenceResponseTime50thPercentile: 1.2315135
            userDefined90thPercentileThreshold: 1.0246457
            deploymentVersion: deploymentVersion
            annotationType: annotationType
            entityId: entityId
            affectedSyntheticActions:
            - affectedSyntheticActions
            - affectedSyntheticActions
            eventType: CPU_SATURATED
            affectedUserActionsPerMinute: 1.4894159
            activeMaintenanceWindows:
            - activeMaintenanceWindows
            - activeMaintenanceWindows
            mobileAppVersion: mobileAppVersion
            impactLevel: INFRASTRUCTURE
            userDefinedFailureRateThreshold: 6.846853
            percentile: 50th
            customProperties:
              key: customProperties
            remediationAction: remediationAction
            service: service
            endTime: 5
            ciBackLink: ciBackLink
            status: OPEN
            severities:
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            geolocation: geolocation
            serviceMethod: serviceMethod
          - deploymentProject: deploymentProject
            cpuLimitInMHz: 7
            deploymentParamAdded: deploymentParamAdded
            isClusterWide: true
            source: source
            effectiveEntity: effectiveEntity
            operatingSystem: operatingSystem
            artifact: artifact
            severityLevel: AVAILABILITY
            cpuLoad: 9.301444
            affectedRequestsPerMinute: 3.6160767
            entityName: entityName
            annotationDescription: annotationDescription
            browser: INFRASTRUCTURE
            affectedSyntheticLocations:
            - affectedSyntheticLocations
            - affectedSyntheticLocations
            startTime: 5
            deploymentName: deploymentName
            deploymentParamRemoved: deploymentParamRemoved
            userDefined50thPercentileThreshold: 2.027123
            serviceMethodGroup: serviceMethodGroup
            referenceResponseTime90thPercentile: 4.145608
            isRootCause: true
            userAction: userAction
            minimumProcessGroupInstanceCountThreshold: 7
            referenceResponseTime50thPercentile: 1.2315135
            userDefined90thPercentileThreshold: 1.0246457
            deploymentVersion: deploymentVersion
            annotationType: annotationType
            entityId: entityId
            affectedSyntheticActions:
            - affectedSyntheticActions
            - affectedSyntheticActions
            eventType: CPU_SATURATED
            affectedUserActionsPerMinute: 1.4894159
            activeMaintenanceWindows:
            - activeMaintenanceWindows
            - activeMaintenanceWindows
            mobileAppVersion: mobileAppVersion
            impactLevel: INFRASTRUCTURE
            userDefinedFailureRateThreshold: 6.846853
            percentile: 50th
            customProperties:
              key: customProperties
            remediationAction: remediationAction
            service: service
            endTime: 5
            ciBackLink: ciBackLink
            status: OPEN
            severities:
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            geolocation: geolocation
            serviceMethod: serviceMethod
          status: OPEN
      properties:
        result:
          $ref: '#/components/schemas/Problem'
      type: object
    TagMatchRule:
      description: Allows to attach an event to an entity that fits the specified criteria
      properties:
        meTypes:
          description: List of ME types the event can be attached to
          items:
            enum:
            - HOST
            - PROCESS_GROUP_INSTANCE
            - DOCKER_CONTAINER_GROUP_INSTANCE
            - DISK
            - NETWORK_INTERFACE
            - HYPERVISOR
            - VIRTUALMACHINE
            - EC2_INSTANCE
            - ELASTIC_LOAD_BALANCER
            - RELATIONAL_DATABASE_SERVICE
            - AWS_LAMBDA_FUNCTION
            - EBS_VOLUME
            - DYNAMO_DB_TABLE
            - SERVICE
            - APPLICATION
            - MOBILE_APPLICATION
            - CUSTOM_APPLICATION
            - SYNTHETIC_TEST
            - CUSTOM_DEVICE
            - APPLICATION_METHOD
            - SERVICE_METHOD
            - GEOLOCATION
            - PROCESS_GROUP
            - OPENSTACK_REGION
            - OPENSTACK_VM
            - CINDER_VOLUME
            - NEUTRON_SUBNET
            - SWIFT_CONTAINER
            - OPENSTACK_PROJECT
            - DCRUM_SERVICE
            - DCRUM_SERVICE_INSTANCE
            - DCRUM_APPLICATION
            - VMWARE_DATACENTER
            - AZURE_REGION
            - AZURE_VM
            - AWS_AVAILABILITY_ZONE
            - GEOLOC_SITE
            - AUXILIARY_SYNTHETIC_TEST
            - CUSTOM_DEVICE_GROUP
            - SYNTHETIC_TEST_STEP
            - AZURE_SQL_SERVER
            - AZURE_APPLICATION_GATEWAY
            - AZURE_LOAD_BALANCER
            - AZURE_API_MANAGEMENT_SERVICE
            - AZURE_REDIS_CACHE
            - AZURE_EVENT_HUB
            - SERVICE_INSTANCE
            - OS
            - HOST_GROUP
            - ENVIRONMENT
            - GOOGLE_COMPUTE_ENGINE
            - GCP_ZONE
            type: string
          type: array
        tags:
          description: List of Tags an entity has to match
          items:
            $ref: '#/components/schemas/TagInfo'
          type: array
      type: object
    ExternalEventResolvedNotification:
      description: Resolved Synthetic event.
      example:
        eventId: eventId
        testId: testId
        endTimestamp: 6
      properties:
        testId:
          description: The ID of Synthetic test.
          type: string
        eventId:
          description: The unique ID of the event.
          type: string
        endTimestamp:
          description: End timestamp of the event.
          format: int64
          type: integer
      type: object
    SyntheticTestStep:
      description: Synthetic test step.
      example:
        id: 1
        title: title
      properties:
        id:
          description: Unique ID of the step.
          format: int64
          type: integer
        title:
          description: Step name, displayed in the UI.
          type: string
      type: object
    MonitoringState:
      description: Defines the current monitoring state of an entity.
      example:
        actualMonitoringState: ON
        restartRequired: true
        expectedMonitoringState: ON
      properties:
        actualMonitoringState:
          description: The current actual monitoring state on the entity.
          enum:
          - ON
          - OFF
          type: string
        expectedMonitoringState:
          description: The monitoring which is expected from the configuration
          enum:
          - ON
          - OFF
          type: string
        restartRequired:
          description: Defines whether or not the process has to restarted to enable monitoring
          type: boolean
      type: object
    TimeseriesRegistrationMessage:
      description: Definition of a custom metric.
      example:
        displayName: received.coffees
        unit: Count
        dimensions:
        - coffee
        types:
        - coffee machine
      properties:
        displayName:
          description: The name of the metric that will appear in the user interface. It is limited to 256 characters.
          type: string
        unit:
          description: The unit the metric will use. If the parameter is not specified or the wrong value is specified, the `Count` value will be assigned.
          enum:
          - NanoSecond
          - MicroSecond
          - MilliSecond
          - Second
          - Minute
          - Hour
          - Bit
          - Byte
          - KiloByte
          - KibiByte
          - MegaByte
          - MebiByte
          - GigaByte
          - GibiByte
          - BytePerSecond
          - BytePerMinute
          - BitPerSecond
          - BitPerMinute
          - KiloBytePerSecond
          - KiloBytePerMinute
          - KibiBytePerSecond
          - KibiBytePerMinute
          - MegaBytePerSecond
          - MegaBytePerMinute
          - MebiBytePerSecond
          - MebiBytePerMinute
          - Ratio
          - Percent
          - Promille
          - Count
          - PerSecond
          - PerMinute
          - State
          - Unspecified
          - NotApplicable
          type: string
        dimensions:
          description: "Metric dimension key that will be used to report multiple\
            \ dimensions. For example, a dimension key to report the metric for different\
            \ network cards for the same firewall. The name of dimensions is only\
            \ allowed to contain alphanumeric characters, dots ., hyphens -, and underscores\
            \ _. \n\nThe CUSTOM_DEVICE dimension is added to each new custom metric\
            \ automatically."
          items:
            type: string
          type: array
        types:
          description: |-
            Technology type definition. Used to group metrics under a logical technology name in the UI.

            Metrics must be assigned a software technology type that is identical to the technology type of the custom device you are sending the metric to. For example, if you define your custom device using type `F5-Firewall` you must also register all related custom metrics as type `F5-Firewall`.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    AnonymizationIdResult:
      example:
        requestId: -4013759873546847071
      properties:
        requestId:
          description: returns the id of the anonymization request.
          example: -4013759873546847071
          type: string
      type: object
    ProcessGroupInstance:
      example:
        toRelationships: '{}'
        bitness: 32bit
        metadata: '{}'
        displayName: displayName
        versionedModules:
        - name: name
          version: version
        - name: name
          version: version
        softwareTechnologies:
        - edition: edition
          type: type
          version: version
        - edition: edition
          type: type
          version: version
        entityId: entityId
        discoveredName: discoveredName
        firstSeenTimestamp: 0
        listenPorts:
        - 1
        - 1
        modules:
        - modules
        - modules
        customizedName: customizedName
        tags:
        - context: CONTEXTLESS
          value: value
          key: key
        - context: CONTEXTLESS
          value: value
          key: key
        fromRelationships: '{}'
        monitoringState:
          actualMonitoringState: ON
          restartRequired: true
          expectedMonitoringState: ON
        lastSeenTimestamp: 6
        agentVersions:
        - major: 5
          minor: 2
          sourceRevision: sourceRevision
          revision: 7
          timestamp: timestamp
        - major: 5
          minor: 2
          sourceRevision: sourceRevision
          revision: 7
          timestamp: timestamp
        azureHostName:
        - azureHostName
        - azureHostName
        azureSiteName:
        - azureSiteName
        - azureSiteName
      properties:
        entityId:
          description: "Dynatrace entity ID of the required entity. \n\nYou can find\
            \ them in the URL of the corresponding Dynatrace page, for example, `HOST-007`."
          type: string
        displayName:
          description: The name of the Dynatrace entity, displayed in the UI.
          type: string
        customizedName:
          description: Customized name of the entity
          type: string
        discoveredName:
          description: Discovered name of the entity
          type: string
        firstSeenTimestamp:
          description: Timestamp in UTC milliseconds when the entity was detected for the first time.
          format: int64
          type: integer
        lastSeenTimestamp:
          description: Timestamp in UTC milliseconds when the entity was detected for the last time.
          format: int64
          type: integer
        tags:
          description: The list of entity tags.
          items:
            $ref: '#/components/schemas/TagInfo'
          type: array
          uniqueItems: true
        fromRelationships:
          properties:
            isProcessOf:
              description: ""
              items:
                type: string
              type: array
            isInstanceOf:
              description: ""
              items:
                type: string
              type: array
            isNetworkClientOf:
              description: ""
              items:
                type: string
              type: array
          type: object
        toRelationships:
          properties:
            runsOnProcessGroupInstance:
              description: ""
              items:
                type: string
              type: array
            isNetworkClientOf:
              description: ""
              items:
                type: string
              type: array
          type: object
        listenPorts:
          description: ""
          items:
            format: int32
            type: integer
          type: array
        bitness:
          description: ""
          enum:
          - 32bit
          - 64bit
          type: string
        azureHostName:
          description: ""
          items:
            type: string
          type: array
        modules:
          description: ""
          items:
            type: string
          type: array
        metadata:
          description: ""
          properties:
            nodejsAppBaseDirectories:
              description: ""
              items:
                type: string
              type: array
            hostGroups:
              description: ""
              items:
                type: string
              type: array
            cloudFoundryAppIds:
              description: ""
              items:
                type: string
              type: array
            dynatraceNodeIds:
              description: ""
              items:
                type: string
              type: array
            executables:
              description: ""
              items:
                type: string
              type: array
            javaMainClasses:
              description: ""
              items:
                type: string
              type: array
            cassandraClusterNames:
              description: ""
              items:
                type: string
              type: array
            cloudFoundryAppNames:
              description: ""
              items:
                type: string
              type: array
            cloudFoundrySpaceNames:
              description: ""
              items:
                type: string
              type: array
            phpScripts:
              description: ""
              items:
                type: string
              type: array
            pluginMetadata:
              additionalProperties:
                type: string
              description: ""
              type: object
            dockerContainerNames:
              description: ""
              items:
                type: string
              type: array
            glassfishInstanceNames:
              description: ""
              items:
                type: string
              type: array
            tibcoBusinessWorksEnginePropertyFiles:
              description: ""
              items:
                type: string
              type: array
            jbossServerNames:
              description: ""
              items:
                type: string
              type: array
            catalinaBaseValues:
              description: ""
              items:
                type: string
              type: array
            kubernetesFullPodNames:
              description: ""
              items:
                type: string
              type: array
            apacheConfigPaths:
              description: ""
              items:
                type: string
              type: array
            varnishInstanceNames:
              description: ""
              items:
                type: string
              type: array
            phpWorkingDirectories:
              description: ""
              items:
                type: string
              type: array
            googleCloudProjects:
              description: ""
              items:
                type: string
              type: array
            dockerContainerImageVersions:
              description: ""
              items:
                type: string
              type: array
            hybrisConfigDirectories:
              description: ""
              items:
                type: string
              type: array
            executablePaths:
              description: ""
              items:
                type: string
              type: array
            awsEcrImageRegions:
              description: ""
              items:
                type: string
              type: array
            dotNetCommands:
              description: ""
              items:
                type: string
              type: array
            weblogicDomainNames:
              description: ""
              items:
                type: string
              type: array
            googleAppEngineServices:
              description: ""
              items:
                type: string
              type: array
            ibmIntegrationBusBrokerNames:
              description: ""
              items:
                type: string
              type: array
            elasticSearchNodeNames:
              description: ""
              items:
                type: string
              type: array
            kubernetesNamespaces:
              description: ""
              items:
                type: string
              type: array
            hybrisDataDirectories:
              description: ""
              items:
                type: string
              type: array
            envVariables:
              additionalProperties:
                type: string
              description: ""
              type: object
            javaJarFiles:
              description: ""
              items:
                type: string
              type: array
            javaJarPaths:
              description: ""
              items:
                type: string
              type: array
            dockerContainerIds:
              description: ""
              items:
                type: string
              type: array
            cloudFoundrySpaceIds:
              description: ""
              items:
                type: string
              type: array
            tibcoBWEnginePropertyFilePaths:
              description: ""
              items:
                type: string
              type: array
            kubernetesContainerNames:
              description: ""
              items:
                type: string
              type: array
            ruleResult:
              description: ""
              items:
                type: string
              type: array
            rubyAppRootPaths:
              description: ""
              items:
                type: string
              type: array
            jbossModes:
              description: ""
              items:
                type: string
              type: array
            awsLambdaFunctionNames:
              description: ""
              items:
                type: string
              type: array
            cloudFoundryInstanceIndexes:
              description: ""
              items:
                type: string
              type: array
            hybrisBinDirectories:
              description: ""
              items:
                type: string
              type: array
            weblogicHomeValues:
              description: ""
              items:
                type: string
              type: array
            jbossHomes:
              description: ""
              items:
                type: string
              type: array
            dynatraceClusterIds:
              description: ""
              items:
                type: string
              type: array
            googleAppEngineInstances:
              description: ""
              items:
                type: string
              type: array
            commandLineArgs:
              description: ""
              items:
                type: string
              type: array
            aspDotNetCoreApplicationPaths:
              description: ""
              items:
                type: string
              type: array
            awsEcrImageAccountIds:
              description: ""
              items:
                type: string
              type: array
            websphereClusterNames:
              description: ""
              items:
                type: string
              type: array
            kubernetesAnnotations:
              additionalProperties:
                type: string
              description: ""
              type: object
            websphereServerNames:
              description: ""
              items:
                type: string
              type: array
            catalinaHomeValues:
              description: ""
              items:
                type: string
              type: array
            glassfishDomainNames:
              description: ""
              items:
                type: string
              type: array
            kubernetesBasePodNames:
              description: ""
              items:
                type: string
              type: array
            weblogicClusterNames:
              description: ""
              items:
                type: string
              type: array
            websphereNodeNames:
              description: ""
              items:
                type: string
              type: array
            iisAppPools:
              description: ""
              items:
                type: string
              type: array
            javaMainModules:
              description: ""
              items:
                type: string
              type: array
            kubernetesPodUids:
              description: ""
              items:
                type: string
              type: array
            dockerContainerImageNames:
              description: ""
              items:
                type: string
              type: array
            coldfusionJvmConfigFiles:
              description: ""
              items:
                type: string
              type: array
            serviceNames:
              description: ""
              items:
                type: string
              type: array
            dotnetCommandPath:
              description: ""
              items:
                type: string
              type: array
            ibmIntegrationBusExecutionGroupNames:
              description: ""
              items:
                type: string
              type: array
            websphereCellNames:
              description: ""
              items:
                type: string
              type: array
            elasticSearchClusterNames:
              description: ""
              items:
                type: string
              type: array
            nodejsAppNames:
              description: ""
              items:
                type: string
              type: array
            nodejsScriptNames:
              description: ""
              items:
                type: string
              type: array
            iisRoleNames:
              description: ""
              items:
                type: string
              type: array
            apacheSparkMasterIpAddresses:
              description: ""
              items:
                type: string
              type: array
            weblogicNames:
              description: ""
              items:
                type: string
              type: array
            rubyScriptPaths:
              description: ""
              items:
                type: string
              type: array
            awsRegions:
              description: ""
              items:
                type: string
              type: array
          type: object
        azureSiteName:
          description: ""
          items:
            type: string
          type: array
        versionedModules:
          description: ""
          items:
            $ref: '#/components/schemas/ProcessGroupInstanceModule'
          type: array
        agentVersions:
          description: Defines the versions of the agents currently running on the entity.
          items:
            $ref: '#/components/schemas/AgentVersion'
          type: array
        softwareTechnologies:
          description: ""
          items:
            $ref: '#/components/schemas/TechnologyInfo'
          type: array
        monitoringState:
          $ref: '#/components/schemas/MonitoringState'
      type: object
    ProblemComment:
      description: A comment of a problem
      example:
        comment: This is a comment!
        user: user1
        context: Slack
      properties:
        comment:
          description: The comment to the problem.
          type: string
        user:
          description: The author of the comment.
          type: string
        context:
          description: The context of the comment. It can contain any additional information.
          type: string
      required:
      - comment
      - user
      type: object
    UserSession:
      description: The user session encompasses multiple user actions, with some additional information that allows you to group and categorize user sessions.
      properties:
        tenantId:
          description: Identifies the Dynatrace tenant that captured this user session.
          example: azy123456
          type: string
        userSessionId:
          description: A unique, generated ID that identifies this user session.
          type: string
        startTime:
          description: The time when the first user action in this user session recorded, in milliseconds since the epoch.
          example: 1511363122754
          format: int64
          type: integer
        endTime:
          description: The time when the last user action in this user session recorded, in milliseconds since the epoch.
          example: 1511363122754
          format: int64
          type: integer
        duration:
          description: The amount of time from the start of the first user action to the end of the last user action, in milliseconds.
          example: 122300
          format: int64
          type: integer
        internalUserId:
          description: A generated, unique ID of the user triggering this user session.
          type: string
        userType:
          description: Indicates if this user session is generated by an automated process (ROBOT, SYNTHETIC) or by a human (REAL_USER).
          enum:
          - REAL_USER
          - ROBOT
          - SYNTHETIC
          type: string
        applicationType:
          description: Indicates the type of application used for this user session.
          enum:
          - WEB_APPLICATION
          - MOBILE_APPLICATION
          - AMP_APPLICATION
          - CUSTOM_APPLICATION
          type: string
        bounce:
          description: Indicates if a bounce is detected, which means there is only one user action in this user session.
          type: boolean
        newUser:
          description: Indicates whether activity from this user has been seen before.
          type: boolean
        userActionCount:
          description: The number of user actions in this user session.
          format: int32
          type: integer
        totalErrorCount:
          description: The number of errors detected in this user session.
          format: int32
          type: integer
        matchingConversionGoals:
          description: 'Lists the user session-based conversion goals that match this
            user session. Note: You can also record conversion goals for user actions.'
          items:
            type: string
          type: array
        ip:
          description: The IP address (IPv4 or IPv6) from where this user session originated.
          type: string
        continent:
          description: The continent from which this user session originated (based on IP address).
          type: string
        country:
          description: The country from which this user session originated (based on IP address).
          type: string
        region:
          description: The region from which this user session originated (based on IP address).
          type: string
        city:
          description: The city from which this user session originated (based on IP address).
          type: string
        browserType:
          description: The browser type used for this user session.
          example: Mobile Browser, Desktop Browser
          type: string
        browserFamily:
          description: The browser family used for this user session.
          example: Firefox, Chrome, IE
          type: string
        browserMajorVersion:
          description: The version of the browser used for this user session.
          example: Firefox 57, Chrome 60
          type: string
        osFamily:
          description: The type of operating system used for this user session.
          example: Windows, Linux
          type: string
        osVersion:
          description: The version of the operating system used for this user session.
          example: iOS 9, Windows 10
          type: string
        manufacturer:
          description: The detected manufacturer of the device used for this user session.
          example: Samsung, Apple
          type: string
        device:
          description: The detected device used for this user session.
          example: Samsung S5, Apple iPhone X
          type: string
        userId:
          description: The user ID provided for this user session by session tagging.
          example: user@example.org
          type: string
        screenHeight:
          description: The detected screen height of the device used for this user session.
          example: 768
          format: int32
          type: integer
        screenWidth:
          description: The detected screen width of the device used for this user session.
          example: 1024
          format: int32
          type: integer
        screenOrientation:
          description: Indicates the type of screen orientation used on the device for this user session.
          enum:
          - UNDEFINED
          - LANDSCAPE
          - PORTRAIT
          example: LANDSCAPE
          type: string
        displayResolution:
          description: The detected screen resolution of the device used for this user session.
          enum:
          - CGA
          - QVGA
          - VGA
          - NTSC
          - PAL
          - SVGA
          - FWVGA
          - XGA
          - WXGA
          - WXGA2
          - WXGA3
          - HD
          - _1280x854
          - SXGAMinus
          - SXGA
          - SXGAPlus
          - WSXGA
          - UXGA
          - WSXGAPlus
          - FHD
          - WUXGA
          - QXGA
          - WQXGA
          - WQXGA2
          - QSXGA
          - UHD4K
          - UHD8K
          - UHD16K
          - FWXGA
          - WXGAPlus
          - UGA
          - HVGA
          - WVGA
          - WVGA2
          - DVGA
          - QQVGA
          - HQVGA
          - HQVGA2
          - WQVGA
          - WQVGA2
          - WQVGA3
          - WSVGA
          - WSVGA2
          - XGAPLUS
          - QWXGA
          - WQSXGA
          - QUXGA
          - WQUXGA
          - HXGA
          - WHXGA
          - HSXGA
          - WHSXGA
          - HUXGA
          - WHUXGA
          - nHD
          - qHD
          - DCI2K
          - QHD
          - UWQHD
          - GHDPlus
          - DCI4K
          - UHDPlus
          example: VGA, UHD4K, HUXGA
          type: string
        hasCrash:
          description: Indicates whether this user session includes a crash.
          type: boolean
        isp:
          description: The internet service provider from which this user session originated (based on IP address).
          type: string
        clientType:
          description: Additional textual information about the client.
          example: ' Desktop Browser, Mobile App, Mobile Browser, Robot, Synthetic
            Agent, Tablet Browser'
          type: string
        browserMonitorId:
          description: Reports the id of the browser monitor
          type: string
        browserMonitorName:
          description: Reports the name of the browser monitor
          type: string
        stringProperties:
          additionalProperties:
            type: string
          description: A map of textual tags attached to this user session. The map contains the tags and their associated value.
          type: object
        numProperties:
          additionalProperties:
            type: number
          description: A map of numerical tags attached to this user session. The map contains the tags and their associated value.
          type: object
        dateProperties:
          additionalProperties:
            format: date-time
            type: string
          description: A map of date tags attached to this user session. The map contains the tags and their associated value.
          type: object
        userActions:
          description: The list of user actions recorded in this user session.
          items:
            $ref: '#/components/schemas/UserSessionUserAction'
          type: array
        events:
          description: A list of additional events recorded in this user session.
          items:
            $ref: '#/components/schemas/UserSessionEvents'
          type: array
        errors:
          description: A list of errors recorded in this user session.
          items:
            $ref: '#/components/schemas/UserSessionErrors'
          type: array
        appVersion:
          description: Version information for the web application provided by another integration, such as OpenKit.
          type: string
        endReason:
          description: Describes how this user session ended.
          enum:
          - TIMEOUT
          - EXTENDED_TIMEOUT
          - USER_ACTION_LIMIT
          - DURATION_LIMIT
          - END_EVENT
          type: string
      type: object
    EventPushMessage:
      example:
        eventType: CUSTOM_ANNOTATION
        start: 1521042929000
        end: 1521542929000
        attachRules:
          entityIds:
          - CUSTOM_DEVICE-0000000000000007
          tagRule:
          - meTypes:
            - CUSTOM_DEVICE
            tags:
            - context: CONTEXTLESS
              key: customTag
        annotationDescription: coffee machine is defect
        annotationType: defect
        source: OpsControl
      properties:
        eventType:
          description: The predefined event type
          enum:
          - CUSTOM_ANNOTATION
          - CUSTOM_DEPLOYMENT
          - CUSTOM_CONFIGURATION
          - CUSTOM_INFO
          - ERROR_EVENT
          - AVAILABILITY_EVENT
          - PERFORMANCE_EVENT
          - RESOURCE_CONTENTION
          type: string
        start:
          description: Optional start timestamp of the event in UTC milliseconds (for example 1495200637630). The actual time is used for the event if no start timestamp is provided.
          format: int64
          type: integer
        end:
          description: Optional end timestamp of the event in UTC milliseconds. The actual time is used if no end timestamp is provided.
          format: int64
          type: integer
        attachRules:
          $ref: '#/components/schemas/PushEventAttachRules'
        customProperties:
          additionalProperties:
            properties: {}
            type: object
          description: Dictionary of custom key value pairs that can be used to send additional information along with the event
          type: object
      type: object
    TagInfo:
      description: Tag of a Dynatrace entity.
      example:
        context: CONTEXTLESS
        value: value
        key: key
      properties:
        context:
          description: "The origin of the tag, like AWS or Cloud Foundry. \n\nCustom\
            \ tags use the `CONTEXTLESS` value."
          enum:
          - CONTEXTLESS
          - AWS
          - ENVIRONMENT
          - CLOUD_FOUNDRY
          - KUBERNETES
          - GOOGLE_CLOUD
          type: string
        key:
          description: "The key of the tag. \n\nCustom tags have the tag value here."
          type: string
        value:
          description: "The value of the tag. \n\nNot applicable to custom tags."
          type: string
      required:
      - key
      type: object
    EventRestImpact:
      description: Holds information about the impact of an event
      example:
        impactLevel: INFRASTRUCTURE
        severityLevel: AVAILABILITY
        entityName: entityName
        entityId: entityId
        eventType: CPU_SATURATED
      properties:
        entityId:
          description: "The ID of the affected Dynatrace entity. \n\n You can find\
            \ the ID in the URL of the corresponding Dynatrace entity page, for example,\
            \ `HOST-007`."
          type: string
        entityName:
          description: The name of the affected Dynatrace entity.
          type: string
        severityLevel:
          description: The severity of the event.
          enum:
          - AVAILABILITY
          - ERROR
          - PERFORMANCE
          - RESOURCE_CONTENTION
          - CUSTOM_ALERT
          - MONITORING_UNAVAILABLE
          type: string
        impactLevel:
          description: The impact level of the event.
          enum:
          - INFRASTRUCTURE
          - SERVICE
          - APPLICATION
          - ENVIRONMENT
          type: string
        eventType:
          description: The type of the event.
          enum:
          - CPU_SATURATED
          - MEMORY_SATURATED
          - SLOW_DISK
          - HIGH_LATENCY
          - INSUFFICIENT_DISK_QUEUE_DEPTH
          - HIGH_GC_ACTIVITY
          - MEMORY_RESOURCES_EXHAUSTED
          - THREADS_RESOURCES_EXHAUSTED
          - HIGH_CONNECTIVITY_FAILURES
          - HIGH_NETWORK_LOSS_RATE
          - PROCESS_CRASHED
          - PROCESS_UNAVAILABLE
          - OVERLOADED_STORAGE
          - HOST_SHUTDOWN
          - HIGH_DROPPED_PACKETS_RATE
          - HIGH_NETWORK_ERROR_RATE
          - HIGH_NETWORK_UTILIZATION
          - LOW_DISK_SPACE
          - CONNECTION_LOST
          - HOST_GRACEFULLY_SHUTDOWN
          - SERVICE_RESPONSE_TIME_DEGRADED
          - FAILURE_RATE_INCREASED
          - UNEXPECTED_HIGH_LOAD
          - UNEXPECTED_LOW_LOAD
          - USER_ACTION_DURATION_DEGRADATION
          - JAVASCRIPT_ERROR_RATE_INCREASED
          - ESXI_START
          - HOST_CONNECTION_LOST
          - HOST_CONNECTION_FAILED
          - HOST_MAINTENANCE
          - HOST_NO_CONNECTION
          - HOST_TIMEOUT
          - VIRTUAL_MACHINE_SHUTDOWN
          - SYNTHETIC_SLOWDOWN
          - WEB_CHECK_GLOBAL_OUTAGE
          - WEB_CHECK_LOCAL_OUTAGE
          - SYNTHETIC_AVAILABILITY
          - ELASTIC_LOAD_BALANCER_HIGH_UNHEALTHY_HOST_RATE
          - ELASTIC_LOAD_BALANCER_HIGH_FAILURE_RATE
          - ELASTIC_LOAD_BALANCER_HIGH_BACKEND_FAILURE_RATE
          - LOW_STORAGE_SPACE
          - EBS_VOLUME_HIGH_LATENCY
          - PROCESS_CUSTOM_AVAILABILITY
          - PROCESS_CUSTOM_ERROR
          - PROCESS_CUSTOM_PERFORMANCE
          - PROCESS_LOG_AVAILABILITY
          - PROCESS_LOG_ERROR
          - PROCESS_LOG_PERFORMANCE
          - LOG_AVAILABILITY
          - LOG_ERROR
          - LOG_PERFORMANCE
          - MOBILE_APP_CRASH_RATE_INCREASED
          - CUSTOM_APP_CRASH_RATE_INCREASED
          - PGI_HAPROXY_QUEUED_REQUESTS_HIGH
          - PGI_HAPROXY_SESSION_USAGE_HIGH
          - PGI_MYSQL_SLOW_QUERIES_RATE_HIGH
          - PGI_OF_SERVICE_UNAVAILABLE
          - HOST_OF_SERVICE_UNAVAILABLE
          - RDS_OF_SERVICE_UNAVAILABLE
          - HOST_LOG_ERROR
          - HOST_LOG_AVAILABILITY
          - HOST_LOG_PERFORMANCE
          - DOCKER_MEMORY_SATURATION
          - OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE
          - OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE
          - HOST_DATASTORE_LOW_DISK_SPACE
          - OPENSTACK_KEYSTONE_UNHEALTHY
          - OPENSTACK_KEYSTONE_SLOW
          - PGI_RMQ_HIGH_MEM_USAGE
          - PGI_RMQ_HIGH_FILE_DESC_USAGE
          - PGI_RMQ_HIGH_SOCKETS_USAGE
          - PGI_RMQ_HIGH_PROCESS_USAGE
          - PGI_RMQ_LOW_DISK_SPACE
          - RDS_RESTART_SEQUENCE
          - LAMBDA_FUNCTION_HIGH_ERROR_RATE
          - CUSTOM_ALERT
          - PROCESS_GROUP_LOW_INSTANCE_COUNT
          - PERFORMANCE_EVENT
          - ERROR_EVENT
          - AVAILABILITY_EVENT
          - RESOURCE_CONTENTION
          - DATABASE_CONNECTION_FAILURE
          - HOST_DISK_LOW_INODES
          - CUSTOM_ANNOTATION
          - CUSTOM_DEPLOYMENT
          - CUSTOM_CONFIGURATION
          - APPLICATION_JS_FRAMEWORK_DETECTED
          - HOST_LOG_MATCHED
          - LOG_MATCHED
          - CUSTOM_INFO
          - MONITORING_UNAVAILABLE
          type: string
      type: object
    DtaqlResultAsTable:
      description: The User Session query result as a table.
      example:
        columnNames:
        - columnNames
        - columnNames
        values:
        - - '{}'
          - '{}'
        - - '{}'
          - '{}'
        extrapolationLevel: 1
      properties:
        extrapolationLevel:
          description: 'Corresponds to the amount of data used to fill the request.
            If the extrapolationLevel is 1, the response contains exact data. However,
            depending on your load and the selected timeframe, only a part of the
            data might be analyzed and the returned data is extrapolated. For example,
            extrapolationLevel: 4 means that only 1/4 of the data was used to fill
            your request. Usually this should be sufficient. If you really need exact
            data, you can split the timeframe into smaller pieces (in this, case 1/4
            of the time).'
          example: 1
          format: int32
          type: integer
        columnNames:
          description: A list of column names.
          items:
            type: string
          type: array
        values:
          description: A list of data rows, where each row is an array of objects. Object types depend on the query. The size of each data row and the order of the elements correspond to columnNames.
          items:
            items:
              properties: {}
              type: object
            type: array
          type: array
      type: object
    UserSessionErrors:
      description: Describes errors reported during a user session.
      properties:
        type:
          description: The type of event or error. For example, 'Error' or 'Crash' for errors, and 'UserTag' for events.
          enum:
          - UserTag
          - VisitTag
          - Error
          - Crash
          - UserTagFromMetaData
          type: string
        name:
          description: The name of the event or error.
          type: string
        domain:
          description: The DNS domain recorded for the user action. Domain is empty if not applicable.
          type: string
        startTime:
          description: The time when the event or error recorded, in milliseconds since the epoch.
          example: 1511363122754
          format: int64
          type: integer
        application:
          description: The name of the application, based on the configured detection rules.
          type: string
        internalApplicationId:
          description: The internal ID of the application. This information is useful when calling various REST APIs, for example as key for time series queries.
          type: string
      type: object
    SyntheticTestLocation:
      description: Synthetic test location.
      example:
        id: id
        enabled: true
      properties:
        id:
          description: Unique ID of the location.
          type: string
        enabled:
          description: Location enabled/disabled. Default is `true`.
          type: boolean
      required:
      - id
      type: object
    Threshold:
      description: Parameters of a single plugin or custom event threshold.
      example:
        filter: ALL
        timeseriesId: timeseriesId
        violatingSamples: 1
        eventName: eventName
        description: description
        threshold: 0.80082819046101150206595775671303272247314453125
        dealertingSamples: 5
        eventType: CPU_SATURATED
        thresholdId: thresholdId
        samples: 6
        enabled: true
        alertCondition: ABOVE
      properties:
        thresholdId:
          description: Unique ID of the threshold.
          type: string
        threshold:
          description: The value of the threshold.
          format: double
          type: number
        alertCondition:
          description: 'Condition for the threshold value check: above or below.'
          enum:
          - ABOVE
          - BELOW
          type: string
        samples:
          description: The number of one-minute samples that form sliding evaluation window.
          format: int32
          type: integer
        violatingSamples:
          description: How many one-minute samples within the evaluation window should violate the threshold to trigger an event.
          format: int32
          type: integer
        dealertingSamples:
          description: How many one-minute samples within the evaluation window should go back to normal to close the event.
          format: int32
          type: integer
        eventType:
          description: The type of the event to trigger on the threshold violation.
          enum:
          - CPU_SATURATED
          - MEMORY_SATURATED
          - SLOW_DISK
          - HIGH_LATENCY
          - INSUFFICIENT_DISK_QUEUE_DEPTH
          - HIGH_GC_ACTIVITY
          - MEMORY_RESOURCES_EXHAUSTED
          - THREADS_RESOURCES_EXHAUSTED
          - HIGH_CONNECTIVITY_FAILURES
          - HIGH_NETWORK_LOSS_RATE
          - PROCESS_CRASHED
          - PROCESS_UNAVAILABLE
          - OVERLOADED_STORAGE
          - HOST_SHUTDOWN
          - HIGH_DROPPED_PACKETS_RATE
          - HIGH_NETWORK_ERROR_RATE
          - HIGH_NETWORK_UTILIZATION
          - LOW_DISK_SPACE
          - CONNECTION_LOST
          - HOST_GRACEFULLY_SHUTDOWN
          - SERVICE_RESPONSE_TIME_DEGRADED
          - FAILURE_RATE_INCREASED
          - UNEXPECTED_HIGH_LOAD
          - UNEXPECTED_LOW_LOAD
          - USER_ACTION_DURATION_DEGRADATION
          - JAVASCRIPT_ERROR_RATE_INCREASED
          - ESXI_START
          - HOST_CONNECTION_LOST
          - HOST_CONNECTION_FAILED
          - HOST_MAINTENANCE
          - HOST_NO_CONNECTION
          - HOST_TIMEOUT
          - VIRTUAL_MACHINE_SHUTDOWN
          - SYNTHETIC_SLOWDOWN
          - WEB_CHECK_GLOBAL_OUTAGE
          - WEB_CHECK_LOCAL_OUTAGE
          - SYNTHETIC_AVAILABILITY
          - ELASTIC_LOAD_BALANCER_HIGH_UNHEALTHY_HOST_RATE
          - ELASTIC_LOAD_BALANCER_HIGH_FAILURE_RATE
          - ELASTIC_LOAD_BALANCER_HIGH_BACKEND_FAILURE_RATE
          - LOW_STORAGE_SPACE
          - EBS_VOLUME_HIGH_LATENCY
          - PROCESS_CUSTOM_AVAILABILITY
          - PROCESS_CUSTOM_ERROR
          - PROCESS_CUSTOM_PERFORMANCE
          - PROCESS_LOG_AVAILABILITY
          - PROCESS_LOG_ERROR
          - PROCESS_LOG_PERFORMANCE
          - LOG_AVAILABILITY
          - LOG_ERROR
          - LOG_PERFORMANCE
          - MOBILE_APP_CRASH_RATE_INCREASED
          - CUSTOM_APP_CRASH_RATE_INCREASED
          - PGI_HAPROXY_QUEUED_REQUESTS_HIGH
          - PGI_HAPROXY_SESSION_USAGE_HIGH
          - PGI_MYSQL_SLOW_QUERIES_RATE_HIGH
          - PGI_OF_SERVICE_UNAVAILABLE
          - HOST_OF_SERVICE_UNAVAILABLE
          - RDS_OF_SERVICE_UNAVAILABLE
          - HOST_LOG_ERROR
          - HOST_LOG_AVAILABILITY
          - HOST_LOG_PERFORMANCE
          - DOCKER_MEMORY_SATURATION
          - OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE
          - OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE
          - HOST_DATASTORE_LOW_DISK_SPACE
          - OPENSTACK_KEYSTONE_UNHEALTHY
          - OPENSTACK_KEYSTONE_SLOW
          - PGI_RMQ_HIGH_MEM_USAGE
          - PGI_RMQ_HIGH_FILE_DESC_USAGE
          - PGI_RMQ_HIGH_SOCKETS_USAGE
          - PGI_RMQ_HIGH_PROCESS_USAGE
          - PGI_RMQ_LOW_DISK_SPACE
          - RDS_RESTART_SEQUENCE
          - LAMBDA_FUNCTION_HIGH_ERROR_RATE
          - CUSTOM_ALERT
          - PROCESS_GROUP_LOW_INSTANCE_COUNT
          - PERFORMANCE_EVENT
          - ERROR_EVENT
          - AVAILABILITY_EVENT
          - RESOURCE_CONTENTION
          - DATABASE_CONNECTION_FAILURE
          - HOST_DISK_LOW_INODES
          - CUSTOM_ANNOTATION
          - CUSTOM_DEPLOYMENT
          - CUSTOM_CONFIGURATION
          - APPLICATION_JS_FRAMEWORK_DETECTED
          - HOST_LOG_MATCHED
          - LOG_MATCHED
          - CUSTOM_INFO
          - MONITORING_UNAVAILABLE
          type: string
        eventName:
          description: The name of the event to trigger on the threshold violation.
          type: string
        description:
          description: "Desription of the event, triggered by a threshold violation.\
            \ \n\n You can use the following placeholders: \n{severity}: the actual\
            \ metric value,\n {alert_condition}: above or below threshold condition,\
            \ \n{threshold}: the threshold value,{violating_samples}: the amount of\
            \ samples, violating the threshold, \n{dimensions}: metric's dimension\
            \ that violated the threshold."
          type: string
        enabled:
          description: Threshold is enabled/disabled.
          type: boolean
        timeseriesId:
          description: "Case-sensitive identifier of the metric evaluated by threshold.\
            \ \n\nYou can use it to find the metric via the `timeseries` endpoint\
            \ of the API."
          type: string
        filter:
          description: The source of the threshold.
          enum:
          - ALL
          - WEB_UI
          - PLUGIN
          - REMOTE_PLUGIN
          - API
          - USER_INTERACTION
          type: string
      type: object
    EventStoreResult:
      description: Contains ids of all custom events that were created by an event push call
      example:
        storedIds:
        - storedIds
        - storedIds
      properties:
        storedIds:
          description: Array of event ids, that were created by an event push call
          items:
            type: string
          type: array
      type: object
    UpdateEntity:
      example:
        tags:
        - office-linz
        - office-klagenfurt
      properties:
        tags:
          description: Tags to be added to the entity.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    MonitoredEntityFilter:
      description: Allows filtering monitored entities by their type and tags.
      example:
        type: HOST
        tags:
        - context: CONTEXTLESS
          tagKey:
            context: CONTEXTLESS
            key: key
          value: value
          key: key
        - context: CONTEXTLESS
          tagKey:
            context: CONTEXTLESS
            key: key
          value: value
          key: key
      properties:
        type:
          description: The type of the Dynatrace entities, for example hosts or services, you want to pick up by matching.
          enum:
          - HOST
          - PROCESS_GROUP_INSTANCE
          - DOCKER_CONTAINER_GROUP_INSTANCE
          - DISK
          - NETWORK_INTERFACE
          - HYPERVISOR
          - VIRTUALMACHINE
          - EC2_INSTANCE
          - ELASTIC_LOAD_BALANCER
          - RELATIONAL_DATABASE_SERVICE
          - AWS_LAMBDA_FUNCTION
          - EBS_VOLUME
          - DYNAMO_DB_TABLE
          - SERVICE
          - APPLICATION
          - MOBILE_APPLICATION
          - CUSTOM_APPLICATION
          - SYNTHETIC_TEST
          - CUSTOM_DEVICE
          - APPLICATION_METHOD
          - SERVICE_METHOD
          - GEOLOCATION
          - PROCESS_GROUP
          - OPENSTACK_REGION
          - OPENSTACK_VM
          - CINDER_VOLUME
          - NEUTRON_SUBNET
          - SWIFT_CONTAINER
          - OPENSTACK_PROJECT
          - DCRUM_SERVICE
          - DCRUM_SERVICE_INSTANCE
          - DCRUM_APPLICATION
          - VMWARE_DATACENTER
          - AZURE_REGION
          - AZURE_VM
          - AWS_AVAILABILITY_ZONE
          - GEOLOC_SITE
          - AUXILIARY_SYNTHETIC_TEST
          - CUSTOM_DEVICE_GROUP
          - SYNTHETIC_TEST_STEP
          - AZURE_SQL_SERVER
          - AZURE_APPLICATION_GATEWAY
          - AZURE_LOAD_BALANCER
          - AZURE_API_MANAGEMENT_SERVICE
          - AZURE_REDIS_CACHE
          - AZURE_EVENT_HUB
          - SERVICE_INSTANCE
          - OS
          - HOST_GROUP
          - ENVIRONMENT
          - GOOGLE_COMPUTE_ENGINE
          - GCP_ZONE
          type: string
        tags:
          description: "The tag you want to use for matching. \n\nYou can use custom\
            \ tags from the UI, AWS tags, Cloud Foundry tags, OpenShift/Kubernetes,\
            \ and tags based on environment variables."
          items:
            $ref: '#/components/schemas/UniversalTag'
          type: array
          uniqueItems: true
      type: object
    SyntheticStepError:
      description: Error message of the Synthetic test step.
      example:
        code: 7
        message: message
      properties:
        message:
          description: The error message.
          type: string
        code:
          description: The error code.
          format: int32
          type: integer
      required:
      - code
      - message
      type: object
    TimeseriesQueryResult:
      description: Representation of a metric configuration with all its parameters and optionally data points.
      example:
        timeseriesId: com.dynatrace.builtin:host.cpu.idle
        displayName: CPU idle
        dimensions:
        - HOST
        allowedAggregationTypes:
        - AVG
        - SUM
        - MIN
        - MAX
        unit: Percent
        filter: BUILTIN
        detailedSource: Infrastructure
        types: []
        dataResult:
          dataPoints:
            CUSTOM_DEVICE-0000000000000007:
            - - 1.522220334E12
              - 89.0
          externalTimeseriesId: com.dynatrace.builtin:host.cpu.idle
          unit: Percent
          entities:
            CUSTOM_DEVICE+0000000000000007: coffeeMachine
          resolutionInMillisUTC: 300000
          aggregationType: AVG
      properties:
        displayName:
          description: The name of the metric in the user interface.
          type: string
        dimensions:
          description: Fine metric division, for example process group and process ID for some process-related metric.
          items:
            type: string
          type: array
        unit:
          description: Units of the metric.
          enum:
          - NanoSecond
          - MicroSecond
          - MilliSecond
          - Second
          - Minute
          - Hour
          - Bit
          - Byte
          - KiloByte
          - KibiByte
          - MegaByte
          - MebiByte
          - GigaByte
          - GibiByte
          - BytePerSecond
          - BytePerMinute
          - BitPerSecond
          - BitPerMinute
          - KiloBytePerSecond
          - KiloBytePerMinute
          - KibiBytePerSecond
          - KibiBytePerMinute
          - MegaBytePerSecond
          - MegaBytePerMinute
          - MebiBytePerSecond
          - MebiBytePerMinute
          - Ratio
          - Percent
          - Promille
          - Count
          - PerSecond
          - PerMinute
          - State
          - Unspecified
          - NotApplicable
          type: string
        detailedSource:
          description: The feature, where the metric originates.
          type: string
        pluginId:
          description: The ID of the plugin, where the metric originates.
          type: string
        types:
          description: Technology type definition. Used to group metrics under a logical technology name.
          items:
            type: string
          type: array
          uniqueItems: true
        dataResult:
          $ref: '#/components/schemas/TimeseriesDataPointQueryResult'
        aggregationTypes:
          description: The list of allowed aggregations for this metric.
          items:
            enum:
            - MIN
            - MAX
            - SUM
            - AVG
            - MEDIAN
            - COUNT
            - PERCENTILE
            type: string
          type: array
        filter:
          description: The feature, where the metric originates.
          enum:
          - ALL
          - PLUGIN
          - REMOTE_PLUGIN
          - BUILTIN
          - CUSTOM
          type: string
        timeseriesId:
          description: The ID of the metric.
          type: string
      type: object
    GlobalProblemStatus:
      description: Count of open problems in your environment.
      example:
        openProblemCounts: '{}'
        totalOpenProblemsCount: 0
      properties:
        totalOpenProblemsCount:
          description: Total number of open problems in your environment.
          format: int32
          type: integer
        openProblemCounts:
          description: Number of open problems per impact level.
          properties:
            APPLICATION:
              description: Holds the count of impacted entities for entities belonging to the impact level APPLICATION
              format: int32
              type: integer
            ENVIRONMENT:
              description: Holds the count of impacted entities for entities belonging to the impact level ENVIRONMENT
              format: int32
              type: integer
            INFRASTRUCTURE:
              description: Holds the count of impacted entities for entities belonging to the impact level INFRASTRUCTURE
              format: int32
              type: integer
            SERVICE:
              description: Holds the count of impacted entities for entities belonging to the impact level SERVICE
              format: int32
              type: integer
          type: object
      type: object
    TimeseriesDataPointQueryResult:
      description: List of datapoints, as well as attributes describing the unit of the returned data points, the result resolution of the metric and the selected type of aggregation.
      example:
        dataPoints:
          CUSTOM_DEVICE-0000000000000007:
          - - 1.522220334E12
            - 89.0
        externalTimeseriesId: com.dynatrace.builtin:host.cpu.idle
        unit: Percent
        entities:
          CUSTOM_DEVICE+0000000000000007: coffeeMachine
        resolutionInMillisUTC: 300000
        aggregationType: AVG
      properties:
        dataPoints:
          additionalProperties:
            items:
              items:
                format: float
                type: number
              type: array
            type: array
          description: "Metric data points \n\nA JSON object that maps the ID of the\
            \ entity that delivered the data points and an array, which consists of\
            \ arrays of the data point float values.\n\nMay contain more that one\
            \ entity ID per record (for example, a host and its network interface).\
            \ In such cases, entity IDs are separated by commas.\nA datapoint contains\
            \ a value and a timestamp, at which the value was recorded.\nThere are\
            \ three versions of data points:\nNumeric datapoint: contains a numeric\
            \ value\nEnum datapoint: contains an enum value (currently only for availability\
            \ timeseries)\nPrediction datapoint: Similar to the numeric datapoint,\
            \ but it contains a confidence interval, within which the future values\
            \ are expected to be"
          type: object
        unit:
          description: Unit of data points.
          enum:
          - NanoSecond
          - MicroSecond
          - MilliSecond
          - Second
          - Minute
          - Hour
          - Bit
          - Byte
          - KiloByte
          - KibiByte
          - MegaByte
          - MebiByte
          - GigaByte
          - GibiByte
          - BytePerSecond
          - BytePerMinute
          - BitPerSecond
          - BitPerMinute
          - KiloBytePerSecond
          - KiloBytePerMinute
          - KibiBytePerSecond
          - KibiBytePerMinute
          - MegaBytePerSecond
          - MegaBytePerMinute
          - MebiBytePerSecond
          - MebiBytePerMinute
          - Ratio
          - Percent
          - Promille
          - Count
          - PerSecond
          - PerMinute
          - State
          - Unspecified
          - NotApplicable
          type: string
        aggregationType:
          description: The type of data points aggregation.
          enum:
          - MIN
          - MAX
          - SUM
          - AVG
          - MEDIAN
          - COUNT
          - PERCENTILE
          type: string
        resolutionInMillisUTC:
          description: Resolution of data points.
          format: int64
          type: integer
        entities:
          additionalProperties:
            type: string
          description: |-
            Entities where the data points originate.

            A JSON object that maps the entity ID in Dynatrace and the actual name of the entity.
          type: object
        timeseriesId:
          description: The ID of the metric.
          type: string
      type: object
    ExternalSyntheticLocationTestResult:
      description: Synthetic test results per location.
      example:
        stepResults:
        - id: 3
          responseTimeMillis: 4
          error:
            code: 7
            message: message
          startTimestamp: 2
        - id: 3
          responseTimeMillis: 4
          error:
            code: 7
            message: message
          startTimestamp: 2
        successRate: 1.231513536777255612975068288506008684635162353515625
        success: true
        id: id
        responseTimeMillis: 9
        startTimestamp: 7
      properties:
        id:
          description: The unique ID of the location.
          type: string
        startTimestamp:
          description: Timestamp of text execution start, UTC milliseconds in Dynatrace cluster time.
          format: int64
          type: integer
        success:
          description: Indicates if the execution of the step should be seen as successful - will influence availability timeseries.
          type: boolean
        responseTimeMillis:
          description: "The overall response time of the test from this location,\
            \ milliseconds. \n\n If absent, calculated as the sum of response times\
            \ of all steps."
          format: int64
          type: integer
        stepResults:
          description: Results of individual test steps.
          items:
            $ref: '#/components/schemas/SyntheticTestStepResult'
          type: array
        successRate:
          description: "The overall availability of the test from this location, percent.\
            \ \n\n If absent, calculated as the number of successful steps versus\
            \ overall number of steps."
          format: double
          type: number
      required:
      - id
      - startTimestamp
      - stepResults
      - success
      type: object
    UniversalTagKey:
      example:
        context: CONTEXTLESS
        key: key
      properties:
        context:
          enum:
          - CONTEXTLESS
          - AWS
          - ENVIRONMENT
          - CLOUD_FOUNDRY
          - KUBERNETES
          - GOOGLE_COMPUTE_ENGINE
          type: string
        key:
          type: string
      type: object
    PushEventAttachRules:
      description: Defines which monitored entities a event is to be attached to
      properties:
        entityIds:
          description: Array of entity identifiers, the event should be attached to. This can also just be a single value.
          items:
            type: string
          type: array
        tagRule:
          description: Array of tagRules which attach the event on all components that match the specific rules. This can also just be a single value.
          items:
            $ref: '#/components/schemas/TagMatchRule'
          type: array
      type: object
    ProcessGroup:
      example:
        toRelationships: '{}'
        metadata: '{}'
        displayName: displayName
        softwareTechnologies:
        - edition: edition
          type: type
          version: version
        - edition: edition
          type: type
          version: version
        entityId: entityId
        discoveredName: discoveredName
        firstSeenTimestamp: 0
        listenPorts:
        - 1
        - 1
        customizedName: customizedName
        tags:
        - context: CONTEXTLESS
          value: value
          key: key
        - context: CONTEXTLESS
          value: value
          key: key
        fromRelationships: '{}'
        lastSeenTimestamp: 6
        azureHostName:
        - azureHostName
        - azureHostName
        azureSiteName:
        - azureSiteName
        - azureSiteName
      properties:
        entityId:
          description: "Dynatrace entity ID of the required entity. \n\nYou can find\
            \ them in the URL of the corresponding Dynatrace page, for example, `HOST-007`."
          type: string
        displayName:
          description: The name of the Dynatrace entity, displayed in the UI.
          type: string
        customizedName:
          description: Customized name of the entity
          type: string
        discoveredName:
          description: Discovered name of the entity
          type: string
        firstSeenTimestamp:
          description: Timestamp in UTC milliseconds when the entity was detected for the first time.
          format: int64
          type: integer
        lastSeenTimestamp:
          description: Timestamp in UTC milliseconds when the entity was detected for the last time.
          format: int64
          type: integer
        tags:
          description: The list of entity tags.
          items:
            $ref: '#/components/schemas/TagInfo'
          type: array
          uniqueItems: true
        fromRelationships:
          properties:
            isNetworkClientOfProcessGroup:
              description: ""
              items:
                type: string
              type: array
            runsOn:
              description: ""
              items:
                type: string
              type: array
          type: object
        toRelationships:
          properties:
            isNetworkClientOfProcessGroup:
              description: ""
              items:
                type: string
              type: array
            isInstanceOf:
              description: ""
              items:
                type: string
              type: array
            runsOn:
              description: ""
              items:
                type: string
              type: array
          type: object
        listenPorts:
          description: ""
          items:
            format: int32
            type: integer
          type: array
        azureHostName:
          description: ""
          items:
            type: string
          type: array
        metadata:
          description: ""
          properties:
            nodejsAppBaseDirectories:
              description: ""
              items:
                type: string
              type: array
            hostGroups:
              description: ""
              items:
                type: string
              type: array
            cloudFoundryAppIds:
              description: ""
              items:
                type: string
              type: array
            dynatraceNodeIds:
              description: ""
              items:
                type: string
              type: array
            executables:
              description: ""
              items:
                type: string
              type: array
            javaMainClasses:
              description: ""
              items:
                type: string
              type: array
            cassandraClusterNames:
              description: ""
              items:
                type: string
              type: array
            cloudFoundryAppNames:
              description: ""
              items:
                type: string
              type: array
            cloudFoundrySpaceNames:
              description: ""
              items:
                type: string
              type: array
            phpScripts:
              description: ""
              items:
                type: string
              type: array
            pluginMetadata:
              additionalProperties:
                type: string
              description: ""
              type: object
            dockerContainerNames:
              description: ""
              items:
                type: string
              type: array
            glassfishInstanceNames:
              description: ""
              items:
                type: string
              type: array
            tibcoBusinessWorksEnginePropertyFiles:
              description: ""
              items:
                type: string
              type: array
            jbossServerNames:
              description: ""
              items:
                type: string
              type: array
            catalinaBaseValues:
              description: ""
              items:
                type: string
              type: array
            kubernetesFullPodNames:
              description: ""
              items:
                type: string
              type: array
            apacheConfigPaths:
              description: ""
              items:
                type: string
              type: array
            varnishInstanceNames:
              description: ""
              items:
                type: string
              type: array
            phpWorkingDirectories:
              description: ""
              items:
                type: string
              type: array
            googleCloudProjects:
              description: ""
              items:
                type: string
              type: array
            dockerContainerImageVersions:
              description: ""
              items:
                type: string
              type: array
            hybrisConfigDirectories:
              description: ""
              items:
                type: string
              type: array
            executablePaths:
              description: ""
              items:
                type: string
              type: array
            awsEcrImageRegions:
              description: ""
              items:
                type: string
              type: array
            dotNetCommands:
              description: ""
              items:
                type: string
              type: array
            weblogicDomainNames:
              description: ""
              items:
                type: string
              type: array
            googleAppEngineServices:
              description: ""
              items:
                type: string
              type: array
            ibmIntegrationBusBrokerNames:
              description: ""
              items:
                type: string
              type: array
            elasticSearchNodeNames:
              description: ""
              items:
                type: string
              type: array
            kubernetesNamespaces:
              description: ""
              items:
                type: string
              type: array
            hybrisDataDirectories:
              description: ""
              items:
                type: string
              type: array
            envVariables:
              additionalProperties:
                type: string
              description: ""
              type: object
            javaJarFiles:
              description: ""
              items:
                type: string
              type: array
            javaJarPaths:
              description: ""
              items:
                type: string
              type: array
            dockerContainerIds:
              description: ""
              items:
                type: string
              type: array
            cloudFoundrySpaceIds:
              description: ""
              items:
                type: string
              type: array
            tibcoBWEnginePropertyFilePaths:
              description: ""
              items:
                type: string
              type: array
            kubernetesContainerNames:
              description: ""
              items:
                type: string
              type: array
            ruleResult:
              description: ""
              items:
                type: string
              type: array
            rubyAppRootPaths:
              description: ""
              items:
                type: string
              type: array
            jbossModes:
              description: ""
              items:
                type: string
              type: array
            awsLambdaFunctionNames:
              description: ""
              items:
                type: string
              type: array
            cloudFoundryInstanceIndexes:
              description: ""
              items:
                type: string
              type: array
            hybrisBinDirectories:
              description: ""
              items:
                type: string
              type: array
            weblogicHomeValues:
              description: ""
              items:
                type: string
              type: array
            jbossHomes:
              description: ""
              items:
                type: string
              type: array
            dynatraceClusterIds:
              description: ""
              items:
                type: string
              type: array
            googleAppEngineInstances:
              description: ""
              items:
                type: string
              type: array
            commandLineArgs:
              description: ""
              items:
                type: string
              type: array
            aspDotNetCoreApplicationPaths:
              description: ""
              items:
                type: string
              type: array
            awsEcrImageAccountIds:
              description: ""
              items:
                type: string
              type: array
            websphereClusterNames:
              description: ""
              items:
                type: string
              type: array
            kubernetesAnnotations:
              additionalProperties:
                type: string
              description: ""
              type: object
            websphereServerNames:
              description: ""
              items:
                type: string
              type: array
            catalinaHomeValues:
              description: ""
              items:
                type: string
              type: array
            glassfishDomainNames:
              description: ""
              items:
                type: string
              type: array
            kubernetesBasePodNames:
              description: ""
              items:
                type: string
              type: array
            weblogicClusterNames:
              description: ""
              items:
                type: string
              type: array
            websphereNodeNames:
              description: ""
              items:
                type: string
              type: array
            iisAppPools:
              description: ""
              items:
                type: string
              type: array
            javaMainModules:
              description: ""
              items:
                type: string
              type: array
            kubernetesPodUids:
              description: ""
              items:
                type: string
              type: array
            dockerContainerImageNames:
              description: ""
              items:
                type: string
              type: array
            coldfusionJvmConfigFiles:
              description: ""
              items:
                type: string
              type: array
            serviceNames:
              description: ""
              items:
                type: string
              type: array
            dotnetCommandPath:
              description: ""
              items:
                type: string
              type: array
            ibmIntegrationBusExecutionGroupNames:
              description: ""
              items:
                type: string
              type: array
            websphereCellNames:
              description: ""
              items:
                type: string
              type: array
            elasticSearchClusterNames:
              description: ""
              items:
                type: string
              type: array
            nodejsAppNames:
              description: ""
              items:
                type: string
              type: array
            nodejsScriptNames:
              description: ""
              items:
                type: string
              type: array
            iisRoleNames:
              description: ""
              items:
                type: string
              type: array
            apacheSparkMasterIpAddresses:
              description: ""
              items:
                type: string
              type: array
            weblogicNames:
              description: ""
              items:
                type: string
              type: array
            rubyScriptPaths:
              description: ""
              items:
                type: string
              type: array
            awsRegions:
              description: ""
              items:
                type: string
              type: array
          type: object
        azureSiteName:
          description: ""
          items:
            type: string
          type: array
        softwareTechnologies:
          description: ""
          items:
            $ref: '#/components/schemas/TechnologyInfo'
          type: array
      type: object
    ProblemCommentList:
      description: List of comments to a problem
      example:
        comments:
        - comment: This is a comment!
          user: user1
          context: Slack
        - comment: This is a comment!
          user: user1
          context: Slack
      properties:
        comments:
          description: List of comments to a problem.
          items:
            $ref: '#/components/schemas/ProblemComment'
          type: array
      type: object
    TimeseriesQueryMessage:
      description: Contains settings for a timeseries query.
      example:
        timeseriesId: com.dynatrace.builtin:host.cpu.idle
        aggregationType: AVG
        startTimestamp: 1521042929000
        endTimestamp: 1521542929000
        predict: true
        relativeTime: 30mins
        queryMode: SERIES
        entities:
        - CUSTOM_DEVICE-0000000000000007
        tags:
        - office-linz
      properties:
        timeseriesId:
          description: "Case-sensitive identifier of the metric, where you want to\
            \ read data points. \n\nYou can find a list of available built-in Dynatrace\
            \ metrics in the Available timeseries section, and plugin-driven metrics\
            \ in the Plugin timeseries section.\n\nYou can also execute a GET timeseries\
            \ request, to obtain the list of available metrics."
          type: string
        aggregationType:
          description: "Defines which aggregation type is used for the resulting metric.\
            \ \nIf the requested metric doesn't support the specified aggregation,\
            \ the request will result in an error."
          enum:
          - MIN
          - MAX
          - SUM
          - AVG
          - MEDIAN
          - COUNT
          - PERCENTILE
          type: string
        startTimestamp:
          description: Start of timeframe in milliseconds since Unix epoch.
          format: int64
          type: integer
        endTimestamp:
          description: End of timeframe in milliseconds since Unix epoch. Must be larger(later) than start timestamp. If the given timestamp is larger than the actual time, then the actual time is used instead.
          format: int64
          type: integer
        predict:
          description: Used to predict future Values
          type: boolean
        relativeTime:
          description: Relative timeframe, back from the current time.
          enum:
          - min
          - 5mins
          - 10mins
          - 15mins
          - 30mins
          - hour
          - 2hours
          - 6hours
          - day
          - 3days
          - week
          - month
          type: string
        queryMode:
          description: "Defines the type of result that the call should return. Valid\
            \ result modes are:\nseries: returns all the data points of the metric\
            \ in the specified timeframe.\ntotal: returns one scalar value for the\
            \ specified timeframe. \n\nBy default, the series mode is used."
          enum:
          - SERIES
          - TOTAL
          type: string
        entities:
          description: "Filters requested data points by entities which should deliver\
            \ them. You can specify several entities at once. \n\nAllowed values are\
            \ Dynatrace entity IDs. You can find them in the URL of the corresponding\
            \ Dynatrace entity page, for example, HOST-007. \n\nIf the selected entity\
            \ doesn't support the requested metric, the request will result in an\
            \ error."
          items:
            type: string
          type: array
          uniqueItems: true
        tags:
          description: List of labels of entities that you want to fetch data for.
          items:
            type: string
          type: array
          uniqueItems: true
        filters:
          additionalProperties:
            type: string
          description: |-
            A filter is an object, containing map of filter keys and its values. Valid filter keys are:
            processType: Filters by process type. See Process types for allowed values.
            osType: Filters by operating system. See OS types for allowed values.
            serviceType: Filters by service type. See Service types for allowed values.
            technology: Filters by technology type. See Technology types for allowed values.
            webServiceName: Filters by web service name.
            webServiceNamespace: Filters by the web service namespace.
            host: Filters by entity ID of the host, for example HOST-007.
          type: object
        percentile:
          description: "In case of the percentile aggregation type, this parameter\
            \ specifies which percentile of the selected response time metric should\
            \ be delivered. \n\nValid values for percentile are between 1 and 99.\
            \ \n\nPlease keep in mind that percentile export is only possible for\
            \ response-time based metrics such as application and service response\
            \ times."
          format: int32
          type: integer
      type: object
    ProcessGroupInstanceModule:
      example:
        name: name
        version: version
      properties:
        name:
          type: string
        version:
          type: string
      type: object
    Problem:
      description: The properties of a problem.
      example:
        tagsOfAffectedEntities:
        - context: CONTEXTLESS
          value: value
          key: key
        - context: CONTEXTLESS
          value: value
          key: key
        displayName: displayName
        commentCount: 1
        affectedCounts: '{}'
        hasRootCause: true
        impactLevel: INFRASTRUCTURE
        severityLevel: AVAILABILITY
        rankedImpacts:
        - impactLevel: INFRASTRUCTURE
          severityLevel: AVAILABILITY
          entityName: entityName
          entityId: entityId
          eventType: CPU_SATURATED
        - impactLevel: INFRASTRUCTURE
          severityLevel: AVAILABILITY
          entityName: entityName
          entityId: entityId
          eventType: CPU_SATURATED
        recoveredCounts: '{}'
        startTime: 0
        id: id
        endTime: 6
        rankedEvents:
        - deploymentProject: deploymentProject
          cpuLimitInMHz: 7
          deploymentParamAdded: deploymentParamAdded
          isClusterWide: true
          source: source
          effectiveEntity: effectiveEntity
          operatingSystem: operatingSystem
          artifact: artifact
          severityLevel: AVAILABILITY
          cpuLoad: 9.301444
          affectedRequestsPerMinute: 3.6160767
          entityName: entityName
          annotationDescription: annotationDescription
          browser: INFRASTRUCTURE
          affectedSyntheticLocations:
          - affectedSyntheticLocations
          - affectedSyntheticLocations
          startTime: 5
          deploymentName: deploymentName
          deploymentParamRemoved: deploymentParamRemoved
          userDefined50thPercentileThreshold: 2.027123
          serviceMethodGroup: serviceMethodGroup
          referenceResponseTime90thPercentile: 4.145608
          isRootCause: true
          userAction: userAction
          minimumProcessGroupInstanceCountThreshold: 7
          referenceResponseTime50thPercentile: 1.2315135
          userDefined90thPercentileThreshold: 1.0246457
          deploymentVersion: deploymentVersion
          annotationType: annotationType
          entityId: entityId
          affectedSyntheticActions:
          - affectedSyntheticActions
          - affectedSyntheticActions
          eventType: CPU_SATURATED
          affectedUserActionsPerMinute: 1.4894159
          activeMaintenanceWindows:
          - activeMaintenanceWindows
          - activeMaintenanceWindows
          mobileAppVersion: mobileAppVersion
          impactLevel: INFRASTRUCTURE
          userDefinedFailureRateThreshold: 6.846853
          percentile: 50th
          customProperties:
            key: customProperties
          remediationAction: remediationAction
          service: service
          endTime: 5
          ciBackLink: ciBackLink
          status: OPEN
          severities:
          - unit: NanoSecond
            context: CPU_USAGE
            value: 2.3021358869347654518833223846741020679473876953125
          - unit: NanoSecond
            context: CPU_USAGE
            value: 2.3021358869347654518833223846741020679473876953125
          geolocation: geolocation
          serviceMethod: serviceMethod
        - deploymentProject: deploymentProject
          cpuLimitInMHz: 7
          deploymentParamAdded: deploymentParamAdded
          isClusterWide: true
          source: source
          effectiveEntity: effectiveEntity
          operatingSystem: operatingSystem
          artifact: artifact
          severityLevel: AVAILABILITY
          cpuLoad: 9.301444
          affectedRequestsPerMinute: 3.6160767
          entityName: entityName
          annotationDescription: annotationDescription
          browser: INFRASTRUCTURE
          affectedSyntheticLocations:
          - affectedSyntheticLocations
          - affectedSyntheticLocations
          startTime: 5
          deploymentName: deploymentName
          deploymentParamRemoved: deploymentParamRemoved
          userDefined50thPercentileThreshold: 2.027123
          serviceMethodGroup: serviceMethodGroup
          referenceResponseTime90thPercentile: 4.145608
          isRootCause: true
          userAction: userAction
          minimumProcessGroupInstanceCountThreshold: 7
          referenceResponseTime50thPercentile: 1.2315135
          userDefined90thPercentileThreshold: 1.0246457
          deploymentVersion: deploymentVersion
          annotationType: annotationType
          entityId: entityId
          affectedSyntheticActions:
          - affectedSyntheticActions
          - affectedSyntheticActions
          eventType: CPU_SATURATED
          affectedUserActionsPerMinute: 1.4894159
          activeMaintenanceWindows:
          - activeMaintenanceWindows
          - activeMaintenanceWindows
          mobileAppVersion: mobileAppVersion
          impactLevel: INFRASTRUCTURE
          userDefinedFailureRateThreshold: 6.846853
          percentile: 50th
          customProperties:
            key: customProperties
          remediationAction: remediationAction
          service: service
          endTime: 5
          ciBackLink: ciBackLink
          status: OPEN
          severities:
          - unit: NanoSecond
            context: CPU_USAGE
            value: 2.3021358869347654518833223846741020679473876953125
          - unit: NanoSecond
            context: CPU_USAGE
            value: 2.3021358869347654518833223846741020679473876953125
          geolocation: geolocation
          serviceMethod: serviceMethod
        status: OPEN
      properties:
        id:
          description: The ID of the problem.
          type: string
        startTime:
          description: Timestamp of the problem start, in UTC milliseconds.
          format: int64
          type: integer
        endTime:
          description: Timestamp of the problem end, in UTC milliseconds. `-1` if the problem is still open.
          format: int64
          type: integer
        displayName:
          description: The name of the problem, displayed in the UI.
          type: string
        impactLevel:
          description: 'The impact level of the problem. It shows what is affected
            by the problem: infrastructure, service, or application.'
          enum:
          - INFRASTRUCTURE
          - SERVICE
          - APPLICATION
          - ENVIRONMENT
          type: string
        status:
          description: The status of the problem.
          enum:
          - OPEN
          - CLOSED
          type: string
        severityLevel:
          description: The severity of the problem.
          enum:
          - AVAILABILITY
          - ERROR
          - PERFORMANCE
          - RESOURCE_CONTENTION
          - CUSTOM_ALERT
          - MONITORING_UNAVAILABLE
          type: string
        commentCount:
          description: Number of comments to the problem.
          format: int32
          type: integer
        tagsOfAffectedEntities:
          description: Tags of entities affected by the problem.
          items:
            $ref: '#/components/schemas/TagInfo'
          type: array
          uniqueItems: true
        rankedEvents:
          description: List of events related to the problem.
          items:
            $ref: '#/components/schemas/Event'
          type: array
        rankedImpacts:
          description: Provides impact information of the events in an aggregated form. For a more detailed impact analysis, look at 'rankedEvents'
          items:
            $ref: '#/components/schemas/EventRestImpact'
          type: array
        affectedCounts:
          description: The number of affected entities per impact level.
          properties:
            APPLICATION:
              description: Holds the count of impacted entities for entities belonging to the impact level APPLICATION
              format: int32
              type: integer
            ENVIRONMENT:
              description: Holds the count of impacted entities for entities belonging to the impact level ENVIRONMENT
              format: int32
              type: integer
            INFRASTRUCTURE:
              description: Holds the count of impacted entities for entities belonging to the impact level INFRASTRUCTURE
              format: int32
              type: integer
            SERVICE:
              description: Holds the count of impacted entities for entities belonging to the impact level SERVICE
              format: int32
              type: integer
          type: object
        recoveredCounts:
          description: The number of entities which were affected, but recovered, per impact level.
          properties:
            APPLICATION:
              description: Holds the count of impacted entities for entities belonging to the impact level APPLICATION
              format: int32
              type: integer
            ENVIRONMENT:
              description: Holds the count of impacted entities for entities belonging to the impact level ENVIRONMENT
              format: int32
              type: integer
            INFRASTRUCTURE:
              description: Holds the count of impacted entities for entities belonging to the impact level INFRASTRUCTURE
              format: int32
              type: integer
            SERVICE:
              description: Holds the count of impacted entities for entities belonging to the impact level SERVICE
              format: int32
              type: integer
          type: object
        hasRootCause:
          description: Whether Dynatrace has found at least one possible root cause for the problem.
          type: boolean
      type: object
    MaintenanceWindow:
      example:
        schedule:
          recurrence:
            duration: 6
            dayOfMonth: 0
            start: start
            day: MONDAY
          timezoneId: timezoneId
          maintenanceEnd: maintenanceEnd
          maintenanceStart: maintenanceStart
          type: Once
        suppressAlerts: true
        scope:
          entities:
          - entities
          - entities
          matches:
          - type: HOST
            tags:
            - context: CONTEXTLESS
              tagKey:
                context: CONTEXTLESS
                key: key
              value: value
              key: key
            - context: CONTEXTLESS
              tagKey:
                context: CONTEXTLESS
                key: key
              value: value
              key: key
          - type: HOST
            tags:
            - context: CONTEXTLESS
              tagKey:
                context: CONTEXTLESS
                key: key
              value: value
              key: key
            - context: CONTEXTLESS
              tagKey:
                context: CONTEXTLESS
                key: key
              value: value
              key: key
        suppressProblems: true
        description: description
        id: id
        type: Planned
      properties:
        id:
          description: The unique identifier of the maintenance window.
          type: string
        type:
          description: 'The type of the maintenace: planned or unplanned.'
          enum:
          - Planned
          - Unplanned
          type: string
        description:
          description: Short description of maintenance purpose.
          type: string
        suppressAlerts:
          description: Alerting during maintenance is enabled/disabled.
          type: boolean
        suppressProblems:
          description: Problem detection during maintenance is enabled/disabled.
          type: boolean
        scope:
          $ref: '#/components/schemas/MaintenanceWindowScope'
        schedule:
          $ref: '#/components/schemas/MaintenanceWindowSchedule'
      required:
      - schedule
      - type
      type: object
    Application:
      example:
        toRelationships: '{}'
        applicationType: DEFAULT
        displayName: displayName
        entityId: entityId
        discoveredName: discoveredName
        firstSeenTimestamp: 0
        customizedName: customizedName
        tags:
        - context: CONTEXTLESS
          value: value
          key: key
        - context: CONTEXTLESS
          value: value
          key: key
        fromRelationships: '{}'
        lastSeenTimestamp: 6
        ruleAppliedMatchType: CONTAINS
        applicationMatchTarget: URL
        ruleAppliedPattern: ruleAppliedPattern
      properties:
        entityId:
          description: "Dynatrace entity ID of the required entity. \n\nYou can find\
            \ them in the URL of the corresponding Dynatrace page, for example, `HOST-007`."
          type: string
        displayName:
          description: The name of the Dynatrace entity, displayed in the UI.
          type: string
        customizedName:
          description: Customized name of the entity
          type: string
        discoveredName:
          description: Discovered name of the entity
          type: string
        firstSeenTimestamp:
          description: Timestamp in UTC milliseconds when the entity was detected for the first time.
          format: int64
          type: integer
        lastSeenTimestamp:
          description: Timestamp in UTC milliseconds when the entity was detected for the last time.
          format: int64
          type: integer
        tags:
          description: The list of entity tags.
          items:
            $ref: '#/components/schemas/TagInfo'
          type: array
          uniqueItems: true
        fromRelationships:
          description: The list of outgoing calls from the application.
          properties:
            calls:
              description: ""
              items:
                type: string
              type: array
          type: object
        toRelationships:
          description: The list of incoming calls to the application.
          properties: {}
          type: object
        applicationType:
          description: ""
          enum:
          - DEFAULT
          - RUMONLY
          - SYNTHETIC
          - CUSTOM
          - AMP
          - SAAS_VENDOR
          type: string
        ruleAppliedMatchType:
          description: ""
          enum:
          - CONTAINS
          - STARTS
          - ENDS
          - MATCHES
          - ALL_URLS_AND_DOMAINS
          - EQUALS
          type: string
        ruleAppliedPattern:
          description: ""
          type: string
        applicationMatchTarget:
          description: ""
          enum:
          - URL
          - DOMAIN
          type: string
      type: object
    UserSessionEvents:
      description: Describes an external event reported during a user session.
      properties:
        type:
          description: The type of event or error. For example, 'Error' or 'Crash' for errors, and 'UserTag' for events.
          enum:
          - UserTag
          - VisitTag
          - Error
          - Crash
          - UserTagFromMetaData
          type: string
        name:
          description: The name of the event or error.
          type: string
        domain:
          description: The DNS domain recorded for the user action. Domain is empty if not applicable.
          type: string
        startTime:
          description: The time when the event or error recorded, in milliseconds since the epoch.
          example: 1511363122754
          format: int64
          type: integer
        application:
          description: The name of the application, based on the configured detection rules.
          type: string
        internalApplicationId:
          description: The internal ID of the application. This information is useful when calling various REST APIs, for example as key for time series queries.
          type: string
      type: object
    MaintenanceWindowSchedule:
      description: An object defining date, time, and recurrence of the maintenance window.
      example:
        recurrence:
          duration: 6
          dayOfMonth: 0
          start: start
          day: MONDAY
        timezoneId: timezoneId
        maintenanceEnd: maintenanceEnd
        maintenanceStart: maintenanceStart
        type: Once
      properties:
        type:
          description: Recurrence of the schedule.
          enum:
          - Once
          - Day
          - Week
          - Month
          type: string
        timezoneId:
          description: "Time zone of the start and end time. Default time zone is\
            \ UTC. \n\n You can user either UTC offset `UTC+01:00` format or the IANA\
            \ Time Zone Database format."
          type: string
        maintenanceStart:
          description: Start date and time of the maintenance window in the `yyyy-MM-dd HH:mm` format.
          type: string
        maintenanceEnd:
          description: Start date and time of the maintenance window in the `yyyy-MM-dd HH:mm` format.
          type: string
        recurrence:
          $ref: '#/components/schemas/MaintenanceWindowRecurrence'
      required:
      - maintenanceEnd
      - maintenanceStart
      - type
      type: object
    TimeseriesQueryResultWrapper:
      example:
        result:
          dataPoints:
            CUSTOM_DEVICE-0000000000000007:
            - - 1.522220334E12
              - 89.0
          externalTimeseriesId: com.dynatrace.builtin:host.cpu.idle
          unit: Percent
          entities:
            CUSTOM_DEVICE+0000000000000007: coffeeMachine
          resolutionInMillisUTC: 300000
          aggregationType: AVG
      properties:
        result:
          $ref: '#/components/schemas/TimeseriesDataPointQueryResult'
      type: object
    CustomDevicePushResult:
      description: The result of a custom device push request. The entity id is calculated using internal hashing.
      example:
        groupId: groupId
        entityId: entityId
      properties:
        entityId:
          description: "Dynatrace entity id for the custom device.\n\nDynatrace is\
            \ calculating the id based on the given input:\n* groupId is set -> groupId\
            \ and custom device id from the URL path are used to generate the Dynatrace\
            \ device id; Dynatrace advises to always set the 'groupId' field to get\
            \ consistent device - group relations \n* groupId is not set-> custom\
            \ device id from the URL path is used to generate the Dynatrace group\
            \ id (disadvised by Dynatrace as it allows for flaky device - group relations)\n"
          type: string
        groupId:
          description: "Dynatrace entity id for the custom device group.\n\nA custom\
            \ device group should group custom devices which do the same kind of thing\
            \ but are separate instances together. One use for the group is service\
            \ detection, a service id is calculated based on the group id so if you\
            \ want to share service data for some custom devices they need to be in\
            \ the same group.\n\nDynatrace is calculating the id based on the given\
            \ input:\n* groupId is set -> groupId is used to generate the Dynatrace\
            \ group id; Dynatrace advises to always set this field to get consistent\
            \ device - group relations \n* groupId is not set but type is set -> type\
            \ is used to generate the Dynatrace group id (disadvised by Dynatrace\
            \ as it allows for flaky device - group relations)\n* neither groupId\
            \ nor type is set -> custom device id is used to generate the Dynatrace\
            \ group id (disadvised by Dynatrace as it allows for flaky device - group\
            \ relations)\n\n"
          type: string
      type: object
    CustomDevicePushMessage:
      description: Contains information of a custom device which should be persisted.
      example:
        displayName: coffeeMachine
        ipAdresses:
        - 10.0.0.1
        listenPorts:
        - 80
        favicon: https://www.freefavicon.com/freefavicons/food/cup-of-coffee-152-78475.png
        configUrl: http://coffee-machine.dynatrace.internal.com/coffeemachine/manage
        type: coffee machine
        properties: {}
        tags:
        - office-linz
        series:
        - timeseriesId: received.coffees
          dimensions:
            office: Linz
          dataPoints:
          - - 1521542929000
            - 13.0
        hostNames: coffee-machine.dynatrace.internal.com
      properties:
        displayName:
          description: The name of the custom device that will appear in the user interface.
          type: string
        groupId:
          description: |-
            User defined group id of entity.
            This field is optional but can be considered as required as it leads to a consistent picture of custom device - custom device group topology.
            If you send a value for this field, the value will be hashed into the Dynatrace custom device id.
            With that in place, the custom device can only be part of one custom device group without the possibility of flipping.
            If you don't set the field, we will create the custom device group based on the type, or if the type is not present, based on the custom device id;
            also the group will not be hashed into the device id which enables the possibility of group flipping for the device.
            One of many cases where a proper group is important is service detection: you can define which custom devices should lead to the same service by defining the same groupId for those.
          type: string
        ipAddresses:
          description: "List of IP addresses that belong to the custom device. \n\n\
            These addresses are used to automatically discover the horizontal communication\
            \ relationship between this component and all other observed components\
            \ within Smartscape. Once a connection is discovered, it is automatically\
            \ mapped and shown within Smartscape."
          items:
            type: string
          type: array
        listenPorts:
          description: "More detailed information about how the custom device accepts\
            \ communication from other components on the network-port level. \n\n\
            This information is used to automatically connect process-to-process communication\
            \ relationships with custom components."
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        type:
          description: "Technology type definition of the custom device. \n\nIt must\
            \ be the same technology type of the metric you're reporting. \n\nThis\
            \ overwrites the existing value. Only include this parameter in the request\
            \ when you want to update it."
          type: string
        favicon:
          description: Icon to be displayed for your custom component within Smartscape. Provide the full URL of the icon file.
          type: string
        configUrl:
          description: A URL of the configuration web page of the custom device, such as a login page for a firewall or router.
          type: string
        properties:
          additionalProperties:
            type: string
          description: A list of key-value pair properties that will be shown beneath the infographics of your custom device.
          type: object
        tags:
          description: List of custom tags that you want to attach to your custom device.
          items:
            type: string
          type: array
          uniqueItems: true
        series:
          description: "List of metric values that are reported for the custom device.\
            \ \n\nOnly include this if you want to report metrics for the custom device."
          items:
            $ref: '#/components/schemas/EntityTimeseriesData'
          type: array
        hostNames:
          description: List of host names reltated to the custom device.
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    ExternalSyntheticTests:
      example:
        syntheticEngineIconUrl: syntheticEngineIconUrl
        testResults:
        - locationResults:
          - stepResults:
            - id: 3
              responseTimeMillis: 4
              error:
                code: 7
                message: message
              startTimestamp: 2
            - id: 3
              responseTimeMillis: 4
              error:
                code: 7
                message: message
              startTimestamp: 2
            successRate: 1.231513536777255612975068288506008684635162353515625
            success: true
            id: id
            responseTimeMillis: 9
            startTimestamp: 7
          - stepResults:
            - id: 3
              responseTimeMillis: 4
              error:
                code: 7
                message: message
              startTimestamp: 2
            - id: 3
              responseTimeMillis: 4
              error:
                code: 7
                message: message
              startTimestamp: 2
            successRate: 1.231513536777255612975068288506008684635162353515625
            success: true
            id: id
            responseTimeMillis: 9
            startTimestamp: 7
          id: id
          totalStepCount: 2
        - locationResults:
          - stepResults:
            - id: 3
              responseTimeMillis: 4
              error:
                code: 7
                message: message
              startTimestamp: 2
            - id: 3
              responseTimeMillis: 4
              error:
                code: 7
                message: message
              startTimestamp: 2
            successRate: 1.231513536777255612975068288506008684635162353515625
            success: true
            id: id
            responseTimeMillis: 9
            startTimestamp: 7
          - stepResults:
            - id: 3
              responseTimeMillis: 4
              error:
                code: 7
                message: message
              startTimestamp: 2
            - id: 3
              responseTimeMillis: 4
              error:
                code: 7
                message: message
              startTimestamp: 2
            successRate: 1.231513536777255612975068288506008684635162353515625
            success: true
            id: id
            responseTimeMillis: 9
            startTimestamp: 7
          id: id
          totalStepCount: 2
        tests:
        - description: description
          drilldownLink: drilldownLink
          expirationTimestamp: 6
          title: title
          steps:
          - id: 1
            title: title
          - id: 1
            title: title
          enabled: true
          scheduleIntervalInSeconds: 5
          testSetup: testSetup
          deleted: true
          noDataTimeout: 5
          locations:
          - id: id
            enabled: true
          - id: id
            enabled: true
          id: id
          editLink: editLink
        - description: description
          drilldownLink: drilldownLink
          expirationTimestamp: 6
          title: title
          steps:
          - id: 1
            title: title
          - id: 1
            title: title
          enabled: true
          scheduleIntervalInSeconds: 5
          testSetup: testSetup
          deleted: true
          noDataTimeout: 5
          locations:
          - id: id
            enabled: true
          - id: id
            enabled: true
          id: id
          editLink: editLink
        syntheticEngineName: syntheticEngineName
        locations:
        - ip: ip
          name: name
          id: id
        - ip: ip
          name: name
          id: id
        messageTimestamp: 0
      properties:
        syntheticEngineName:
          description: Synthetic engine name.
          type: string
        syntheticEngineIconUrl:
          description: Synthetic engine icon URL.
          type: string
        messageTimestamp:
          description: Message creation timestamp, UTC milliseconds.
          format: int64
          type: integer
        locations:
          description: Test sites definition.
          items:
            $ref: '#/components/schemas/SyntheticLocation'
          type: array
          uniqueItems: true
        tests:
          description: Set of external Synthetic tests.
          items:
            $ref: '#/components/schemas/ExternalSyntheticTest'
          type: array
          uniqueItems: true
        testResults:
          description: Set of external Synthetic test results.
          items:
            $ref: '#/components/schemas/ExternalSyntheticTestResult'
          type: array
          uniqueItems: true
      required:
      - messageTimestamp
      type: object
    EventRestEntry:
      description: Single Event that is returned in the Event Feed Query
      example:
        impactLevel: INFRASTRUCTURE
        severityLevel: AVAILABILITY
        entityName: entityName
        eventStatus: OPEN
        startTime: 2
        entityId: entityId
        endTime: 7
        eventType: CPU_SATURATED
        id: id
        tags:
        - context: CONTEXTLESS
          value: value
          key: key
        - context: CONTEXTLESS
          value: value
          key: key
      properties:
        startTime:
          description: Timestamp when the event was detected
          format: int64
          type: integer
        endTime:
          description: Timestamp when the event was closed
          format: int64
          type: integer
        entityId:
          description: "The ID of the affected Dynatrace entity. \n\n You can find\
            \ the ID in the URL of the corresponding Dynatrace entity page, for example,\
            \ `HOST-007`."
          type: string
        entityName:
          description: The name of the affected Dynatrace entity.
          type: string
        severityLevel:
          description: The severity of the event.
          enum:
          - AVAILABILITY
          - ERROR
          - PERFORMANCE
          - RESOURCE_CONTENTION
          - CUSTOM_ALERT
          - MONITORING_UNAVAILABLE
          type: string
        impactLevel:
          description: The impact level of the event.
          enum:
          - INFRASTRUCTURE
          - SERVICE
          - APPLICATION
          - ENVIRONMENT
          type: string
        eventType:
          description: The type of the event.
          enum:
          - CPU_SATURATED
          - MEMORY_SATURATED
          - SLOW_DISK
          - HIGH_LATENCY
          - INSUFFICIENT_DISK_QUEUE_DEPTH
          - HIGH_GC_ACTIVITY
          - MEMORY_RESOURCES_EXHAUSTED
          - THREADS_RESOURCES_EXHAUSTED
          - HIGH_CONNECTIVITY_FAILURES
          - HIGH_NETWORK_LOSS_RATE
          - PROCESS_CRASHED
          - PROCESS_UNAVAILABLE
          - OVERLOADED_STORAGE
          - HOST_SHUTDOWN
          - HIGH_DROPPED_PACKETS_RATE
          - HIGH_NETWORK_ERROR_RATE
          - HIGH_NETWORK_UTILIZATION
          - LOW_DISK_SPACE
          - CONNECTION_LOST
          - HOST_GRACEFULLY_SHUTDOWN
          - SERVICE_RESPONSE_TIME_DEGRADED
          - FAILURE_RATE_INCREASED
          - UNEXPECTED_HIGH_LOAD
          - UNEXPECTED_LOW_LOAD
          - USER_ACTION_DURATION_DEGRADATION
          - JAVASCRIPT_ERROR_RATE_INCREASED
          - ESXI_START
          - HOST_CONNECTION_LOST
          - HOST_CONNECTION_FAILED
          - HOST_MAINTENANCE
          - HOST_NO_CONNECTION
          - HOST_TIMEOUT
          - VIRTUAL_MACHINE_SHUTDOWN
          - SYNTHETIC_SLOWDOWN
          - WEB_CHECK_GLOBAL_OUTAGE
          - WEB_CHECK_LOCAL_OUTAGE
          - SYNTHETIC_AVAILABILITY
          - ELASTIC_LOAD_BALANCER_HIGH_UNHEALTHY_HOST_RATE
          - ELASTIC_LOAD_BALANCER_HIGH_FAILURE_RATE
          - ELASTIC_LOAD_BALANCER_HIGH_BACKEND_FAILURE_RATE
          - LOW_STORAGE_SPACE
          - EBS_VOLUME_HIGH_LATENCY
          - PROCESS_CUSTOM_AVAILABILITY
          - PROCESS_CUSTOM_ERROR
          - PROCESS_CUSTOM_PERFORMANCE
          - PROCESS_LOG_AVAILABILITY
          - PROCESS_LOG_ERROR
          - PROCESS_LOG_PERFORMANCE
          - LOG_AVAILABILITY
          - LOG_ERROR
          - LOG_PERFORMANCE
          - MOBILE_APP_CRASH_RATE_INCREASED
          - CUSTOM_APP_CRASH_RATE_INCREASED
          - PGI_HAPROXY_QUEUED_REQUESTS_HIGH
          - PGI_HAPROXY_SESSION_USAGE_HIGH
          - PGI_MYSQL_SLOW_QUERIES_RATE_HIGH
          - PGI_OF_SERVICE_UNAVAILABLE
          - HOST_OF_SERVICE_UNAVAILABLE
          - RDS_OF_SERVICE_UNAVAILABLE
          - HOST_LOG_ERROR
          - HOST_LOG_AVAILABILITY
          - HOST_LOG_PERFORMANCE
          - DOCKER_MEMORY_SATURATION
          - OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE
          - OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE
          - HOST_DATASTORE_LOW_DISK_SPACE
          - OPENSTACK_KEYSTONE_UNHEALTHY
          - OPENSTACK_KEYSTONE_SLOW
          - PGI_RMQ_HIGH_MEM_USAGE
          - PGI_RMQ_HIGH_FILE_DESC_USAGE
          - PGI_RMQ_HIGH_SOCKETS_USAGE
          - PGI_RMQ_HIGH_PROCESS_USAGE
          - PGI_RMQ_LOW_DISK_SPACE
          - RDS_RESTART_SEQUENCE
          - LAMBDA_FUNCTION_HIGH_ERROR_RATE
          - CUSTOM_ALERT
          - PROCESS_GROUP_LOW_INSTANCE_COUNT
          - PERFORMANCE_EVENT
          - ERROR_EVENT
          - AVAILABILITY_EVENT
          - RESOURCE_CONTENTION
          - DATABASE_CONNECTION_FAILURE
          - HOST_DISK_LOW_INODES
          - CUSTOM_ANNOTATION
          - CUSTOM_DEPLOYMENT
          - CUSTOM_CONFIGURATION
          - APPLICATION_JS_FRAMEWORK_DETECTED
          - HOST_LOG_MATCHED
          - LOG_MATCHED
          - CUSTOM_INFO
          - MONITORING_UNAVAILABLE
          type: string
        eventStatus:
          description: Specifies the event state
          enum:
          - OPEN
          - CLOSED
          type: string
        tags:
          description: Collects all the tags associated with the monitored entity that raises the event
          items:
            $ref: '#/components/schemas/TagInfo'
          type: array
          uniqueItems: true
        id:
          description: Encoded Event identifier
          type: string
      type: object
    MaintenanceWindowScope:
      description: "An object defining the scope of your maintenance window. \n\n\
        You can specify particular Dynatrace entities or matching rules for dynamic\
        \ formation of the scope. \n\n If no scope is specified, the maintenance applies\
        \ to the entire environment. \n\n To specify the scope at least one entity\
        \ or matching rule has to be specified."
      example:
        entities:
        - entities
        - entities
        matches:
        - type: HOST
          tags:
          - context: CONTEXTLESS
            tagKey:
              context: CONTEXTLESS
              key: key
            value: value
            key: key
          - context: CONTEXTLESS
            tagKey:
              context: CONTEXTLESS
              key: key
            value: value
            key: key
        - type: HOST
          tags:
          - context: CONTEXTLESS
            tagKey:
              context: CONTEXTLESS
              key: key
            value: value
            key: key
          - context: CONTEXTLESS
            tagKey:
              context: CONTEXTLESS
              key: key
            value: value
            key: key
      properties:
        entities:
          description: "Defines Dynatrace entities to be included in scope, for example\
            \ hosts, services, process groups. \n\nAllowed values are Dynatrace entity\
            \ IDs. You can find these in the URL of the corresponding Dynatrace entity\
            \ page, for example, `HOST-007`."
          items:
            type: string
          type: array
          uniqueItems: true
        matches:
          description: An object defining matching rule for dynamic scope formation. Empty rule matches for all entities.
          items:
            $ref: '#/components/schemas/MonitoredEntityFilter'
          type: array
          uniqueItems: true
      type: object
    ExternalEventOpenNotification:
      description: Open Synthetic event.
      example:
        eventId: eventId
        name: name
        locationIds:
        - locationIds
        - locationIds
        testId: testId
        eventType: testOutage
        startTimestamp: 0
      properties:
        testId:
          description: Tne ID of the Synthetic test.
          type: string
        eventId:
          description: The unique ID of the event.
          type: string
        name:
          description: The name of the event, displayed in the UI.
          type: string
        eventType:
          description: The type of the event.
          enum:
          - testOutage
          - testSlowdown
          type: string
        locationIds:
          description: IDs of locations where the event happens.
          items:
            type: string
          type: array
          uniqueItems: true
        startTimestamp:
          description: Start timestamp of the event.
          format: int64
          type: integer
      type: object
    ProblemFeedQueryResult:
      description: Details of open problems in your environment.
      example:
        problems:
        - tagsOfAffectedEntities:
          - context: CONTEXTLESS
            value: value
            key: key
          - context: CONTEXTLESS
            value: value
            key: key
          displayName: displayName
          commentCount: 1
          affectedCounts: '{}'
          hasRootCause: true
          impactLevel: INFRASTRUCTURE
          severityLevel: AVAILABILITY
          rankedImpacts:
          - impactLevel: INFRASTRUCTURE
            severityLevel: AVAILABILITY
            entityName: entityName
            entityId: entityId
            eventType: CPU_SATURATED
          - impactLevel: INFRASTRUCTURE
            severityLevel: AVAILABILITY
            entityName: entityName
            entityId: entityId
            eventType: CPU_SATURATED
          recoveredCounts: '{}'
          startTime: 0
          id: id
          endTime: 6
          rankedEvents:
          - deploymentProject: deploymentProject
            cpuLimitInMHz: 7
            deploymentParamAdded: deploymentParamAdded
            isClusterWide: true
            source: source
            effectiveEntity: effectiveEntity
            operatingSystem: operatingSystem
            artifact: artifact
            severityLevel: AVAILABILITY
            cpuLoad: 9.301444
            affectedRequestsPerMinute: 3.6160767
            entityName: entityName
            annotationDescription: annotationDescription
            browser: INFRASTRUCTURE
            affectedSyntheticLocations:
            - affectedSyntheticLocations
            - affectedSyntheticLocations
            startTime: 5
            deploymentName: deploymentName
            deploymentParamRemoved: deploymentParamRemoved
            userDefined50thPercentileThreshold: 2.027123
            serviceMethodGroup: serviceMethodGroup
            referenceResponseTime90thPercentile: 4.145608
            isRootCause: true
            userAction: userAction
            minimumProcessGroupInstanceCountThreshold: 7
            referenceResponseTime50thPercentile: 1.2315135
            userDefined90thPercentileThreshold: 1.0246457
            deploymentVersion: deploymentVersion
            annotationType: annotationType
            entityId: entityId
            affectedSyntheticActions:
            - affectedSyntheticActions
            - affectedSyntheticActions
            eventType: CPU_SATURATED
            affectedUserActionsPerMinute: 1.4894159
            activeMaintenanceWindows:
            - activeMaintenanceWindows
            - activeMaintenanceWindows
            mobileAppVersion: mobileAppVersion
            impactLevel: INFRASTRUCTURE
            userDefinedFailureRateThreshold: 6.846853
            percentile: 50th
            customProperties:
              key: customProperties
            remediationAction: remediationAction
            service: service
            endTime: 5
            ciBackLink: ciBackLink
            status: OPEN
            severities:
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            geolocation: geolocation
            serviceMethod: serviceMethod
          - deploymentProject: deploymentProject
            cpuLimitInMHz: 7
            deploymentParamAdded: deploymentParamAdded
            isClusterWide: true
            source: source
            effectiveEntity: effectiveEntity
            operatingSystem: operatingSystem
            artifact: artifact
            severityLevel: AVAILABILITY
            cpuLoad: 9.301444
            affectedRequestsPerMinute: 3.6160767
            entityName: entityName
            annotationDescription: annotationDescription
            browser: INFRASTRUCTURE
            affectedSyntheticLocations:
            - affectedSyntheticLocations
            - affectedSyntheticLocations
            startTime: 5
            deploymentName: deploymentName
            deploymentParamRemoved: deploymentParamRemoved
            userDefined50thPercentileThreshold: 2.027123
            serviceMethodGroup: serviceMethodGroup
            referenceResponseTime90thPercentile: 4.145608
            isRootCause: true
            userAction: userAction
            minimumProcessGroupInstanceCountThreshold: 7
            referenceResponseTime50thPercentile: 1.2315135
            userDefined90thPercentileThreshold: 1.0246457
            deploymentVersion: deploymentVersion
            annotationType: annotationType
            entityId: entityId
            affectedSyntheticActions:
            - affectedSyntheticActions
            - affectedSyntheticActions
            eventType: CPU_SATURATED
            affectedUserActionsPerMinute: 1.4894159
            activeMaintenanceWindows:
            - activeMaintenanceWindows
            - activeMaintenanceWindows
            mobileAppVersion: mobileAppVersion
            impactLevel: INFRASTRUCTURE
            userDefinedFailureRateThreshold: 6.846853
            percentile: 50th
            customProperties:
              key: customProperties
            remediationAction: remediationAction
            service: service
            endTime: 5
            ciBackLink: ciBackLink
            status: OPEN
            severities:
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            geolocation: geolocation
            serviceMethod: serviceMethod
          status: OPEN
        - tagsOfAffectedEntities:
          - context: CONTEXTLESS
            value: value
            key: key
          - context: CONTEXTLESS
            value: value
            key: key
          displayName: displayName
          commentCount: 1
          affectedCounts: '{}'
          hasRootCause: true
          impactLevel: INFRASTRUCTURE
          severityLevel: AVAILABILITY
          rankedImpacts:
          - impactLevel: INFRASTRUCTURE
            severityLevel: AVAILABILITY
            entityName: entityName
            entityId: entityId
            eventType: CPU_SATURATED
          - impactLevel: INFRASTRUCTURE
            severityLevel: AVAILABILITY
            entityName: entityName
            entityId: entityId
            eventType: CPU_SATURATED
          recoveredCounts: '{}'
          startTime: 0
          id: id
          endTime: 6
          rankedEvents:
          - deploymentProject: deploymentProject
            cpuLimitInMHz: 7
            deploymentParamAdded: deploymentParamAdded
            isClusterWide: true
            source: source
            effectiveEntity: effectiveEntity
            operatingSystem: operatingSystem
            artifact: artifact
            severityLevel: AVAILABILITY
            cpuLoad: 9.301444
            affectedRequestsPerMinute: 3.6160767
            entityName: entityName
            annotationDescription: annotationDescription
            browser: INFRASTRUCTURE
            affectedSyntheticLocations:
            - affectedSyntheticLocations
            - affectedSyntheticLocations
            startTime: 5
            deploymentName: deploymentName
            deploymentParamRemoved: deploymentParamRemoved
            userDefined50thPercentileThreshold: 2.027123
            serviceMethodGroup: serviceMethodGroup
            referenceResponseTime90thPercentile: 4.145608
            isRootCause: true
            userAction: userAction
            minimumProcessGroupInstanceCountThreshold: 7
            referenceResponseTime50thPercentile: 1.2315135
            userDefined90thPercentileThreshold: 1.0246457
            deploymentVersion: deploymentVersion
            annotationType: annotationType
            entityId: entityId
            affectedSyntheticActions:
            - affectedSyntheticActions
            - affectedSyntheticActions
            eventType: CPU_SATURATED
            affectedUserActionsPerMinute: 1.4894159
            activeMaintenanceWindows:
            - activeMaintenanceWindows
            - activeMaintenanceWindows
            mobileAppVersion: mobileAppVersion
            impactLevel: INFRASTRUCTURE
            userDefinedFailureRateThreshold: 6.846853
            percentile: 50th
            customProperties:
              key: customProperties
            remediationAction: remediationAction
            service: service
            endTime: 5
            ciBackLink: ciBackLink
            status: OPEN
            severities:
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            geolocation: geolocation
            serviceMethod: serviceMethod
          - deploymentProject: deploymentProject
            cpuLimitInMHz: 7
            deploymentParamAdded: deploymentParamAdded
            isClusterWide: true
            source: source
            effectiveEntity: effectiveEntity
            operatingSystem: operatingSystem
            artifact: artifact
            severityLevel: AVAILABILITY
            cpuLoad: 9.301444
            affectedRequestsPerMinute: 3.6160767
            entityName: entityName
            annotationDescription: annotationDescription
            browser: INFRASTRUCTURE
            affectedSyntheticLocations:
            - affectedSyntheticLocations
            - affectedSyntheticLocations
            startTime: 5
            deploymentName: deploymentName
            deploymentParamRemoved: deploymentParamRemoved
            userDefined50thPercentileThreshold: 2.027123
            serviceMethodGroup: serviceMethodGroup
            referenceResponseTime90thPercentile: 4.145608
            isRootCause: true
            userAction: userAction
            minimumProcessGroupInstanceCountThreshold: 7
            referenceResponseTime50thPercentile: 1.2315135
            userDefined90thPercentileThreshold: 1.0246457
            deploymentVersion: deploymentVersion
            annotationType: annotationType
            entityId: entityId
            affectedSyntheticActions:
            - affectedSyntheticActions
            - affectedSyntheticActions
            eventType: CPU_SATURATED
            affectedUserActionsPerMinute: 1.4894159
            activeMaintenanceWindows:
            - activeMaintenanceWindows
            - activeMaintenanceWindows
            mobileAppVersion: mobileAppVersion
            impactLevel: INFRASTRUCTURE
            userDefinedFailureRateThreshold: 6.846853
            percentile: 50th
            customProperties:
              key: customProperties
            remediationAction: remediationAction
            service: service
            endTime: 5
            ciBackLink: ciBackLink
            status: OPEN
            severities:
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            - unit: NanoSecond
              context: CPU_USAGE
              value: 2.3021358869347654518833223846741020679473876953125
            geolocation: geolocation
            serviceMethod: serviceMethod
          status: OPEN
        monitored: '{}'
      properties:
        problems:
          description: "The list of problems and their details. \n\nAll problems within\
            \ specified timeframe, open and closed, are listed."
          items:
            $ref: '#/components/schemas/Problem'
          type: array
        monitored:
          description: The number of monitored entities per impact level.
          properties:
            APPLICATION:
              description: Holds the count of impacted entities for entities belonging to the impact level APPLICATION
              format: int32
              type: integer
            ENVIRONMENT:
              description: Holds the count of impacted entities for entities belonging to the impact level ENVIRONMENT
              format: int32
              type: integer
            INFRASTRUCTURE:
              description: Holds the count of impacted entities for entities belonging to the impact level INFRASTRUCTURE
              format: int32
              type: integer
            SERVICE:
              description: Holds the count of impacted entities for entities belonging to the impact level SERVICE
              format: int32
              type: integer
          type: object
      type: object
    ExternalSyntheticTest:
      description: Synthetic test data.
      example:
        description: description
        drilldownLink: drilldownLink
        expirationTimestamp: 6
        title: title
        steps:
        - id: 1
          title: title
        - id: 1
          title: title
        enabled: true
        scheduleIntervalInSeconds: 5
        testSetup: testSetup
        deleted: true
        noDataTimeout: 5
        locations:
        - id: id
          enabled: true
        - id: id
          enabled: true
        id: id
        editLink: editLink
      properties:
        id:
          description: Unique ID of the Synthetic test.
          type: string
        title:
          description: Test title.
          type: string
        description:
          description: Test description.
          type: string
        testSetup:
          description: Test setup information, for example `browser`.
          type: string
        expirationTimestamp:
          description: Test expiration timestamp, UTC milliseconds in Dynatrace Cluster Time.
          format: int64
          type: integer
        drilldownLink:
          description: A URL to the test results.
          type: string
        editLink:
          description: A URL to edit the test in the original UI.
          type: string
        enabled:
          description: |-
            Test enabled/disabled. Default is `true`.

             If `true`, set the **deleted** parameter to `false`.
          type: boolean
        deleted:
          description: "Deleted test flag. Default is `false`. \n\n If `true`, set\
            \ the **enabled** parameter to `false`."
          type: boolean
        locations:
          description: Locations where the Synthetic test runs.
          items:
            $ref: '#/components/schemas/SyntheticTestLocation'
          type: array
          uniqueItems: true
        steps:
          description: Steps of the Synthetic test.
          items:
            $ref: '#/components/schemas/SyntheticTestStep'
          type: array
        noDataTimeout:
          description: Test timeout in milliseconds. If no test result is reported within this time, the availability state switches to unmonitored. Default is doubled test schedule interval.
          format: int32
          type: integer
        scheduleIntervalInSeconds:
          description: "Test schedule in seconds. The is repeated with the specified\
            \ interval at the external source. \n\nDynatrace expects test results\
            \ with the specified interval. If you report test results to Dynatrace\
            \ less often, adjust the **noDataTimeout** value accordingly."
          format: int32
          type: integer
      required:
      - id
      - scheduleIntervalInSeconds
      type: object
    StateModification:
      description: Operation state to be set for all external Synthetic monitors
      example:
        state: ACTIVE
      properties:
        state:
          description: The new operation state for all external Synthetic monitors.
          enum:
          - ACTIVE
          - INACTIVE
          - HIDDEN
          type: string
      required:
      - state
      type: object
    TechnologyInfo:
      example:
        edition: edition
        type: type
        version: version
      properties:
        type:
          type: string
        edition:
          type: string
        version:
          type: string
      type: object
    ExternalSyntheticTestResult:
      description: Synthetic test result.
      example:
        locationResults:
        - stepResults:
          - id: 3
            responseTimeMillis: 4
            error:
              code: 7
              message: message
            startTimestamp: 2
          - id: 3
            responseTimeMillis: 4
            error:
              code: 7
              message: message
            startTimestamp: 2
          successRate: 1.231513536777255612975068288506008684635162353515625
          success: true
          id: id
          responseTimeMillis: 9
          startTimestamp: 7
        - stepResults:
          - id: 3
            responseTimeMillis: 4
            error:
              code: 7
              message: message
            startTimestamp: 2
          - id: 3
            responseTimeMillis: 4
            error:
              code: 7
              message: message
            startTimestamp: 2
          successRate: 1.231513536777255612975068288506008684635162353515625
          success: true
          id: id
          responseTimeMillis: 9
          startTimestamp: 7
        id: id
        totalStepCount: 2
      properties:
        id:
          description: Unique ID of the test.
          type: string
        totalStepCount:
          description: Number of steps in the test.
          format: int32
          type: integer
        locationResults:
          description: Test results per location.
          items:
            $ref: '#/components/schemas/ExternalSyntheticLocationTestResult'
          type: array
          uniqueItems: true
      required:
      - id
      - locationResults
      - totalStepCount
      type: object
    EventQueryResult:
      description: Result of an Event Feed Query
      example:
        nextCursor: nextCursor
        nextEventId: 6
        nextEventStartTms: 0
        totalEventCount: 5
        from: 1
        to: 5
        events:
        - impactLevel: INFRASTRUCTURE
          severityLevel: AVAILABILITY
          entityName: entityName
          eventStatus: OPEN
          startTime: 2
          entityId: entityId
          endTime: 7
          eventType: CPU_SATURATED
          id: id
          tags:
          - context: CONTEXTLESS
            value: value
            key: key
          - context: CONTEXTLESS
            value: value
            key: key
        - impactLevel: INFRASTRUCTURE
          severityLevel: AVAILABILITY
          entityName: entityName
          eventStatus: OPEN
          startTime: 2
          entityId: entityId
          endTime: 7
          eventType: CPU_SATURATED
          id: id
          tags:
          - context: CONTEXTLESS
            value: value
            key: key
          - context: CONTEXTLESS
            value: value
            key: key
      properties:
        nextEventStartTms:
          description: 'Start time of the next event if the total number of events
            exceeds the maximum batch size of 150 events per request. '
          format: int64
          type: integer
        nextEventId:
          description: 'ID of the next event if the total number of events exceeds
            the maximum batch size of 150 events per request. '
          format: int64
          type: integer
        nextCursor:
          description: If the result would return more than 150 events, nextCursor contains a string that can be used to fetch the next 150 results. If nextCursor is null, then there are no more events returned by the query.
          type: string
        from:
          description: Start of the query timeframe
          format: int64
          type: integer
        to:
          description: End of the query timeframe
          format: int64
          type: integer
        totalEventCount:
          description: Total amount of events found
          format: int64
          type: integer
        events:
          description: List of events
          items:
            $ref: '#/components/schemas/EventRestEntry'
          type: array
      type: object
    UniversalTag:
      example:
        context: CONTEXTLESS
        tagKey:
          context: CONTEXTLESS
          key: key
        value: value
        key: key
      properties:
        tagKey:
          $ref: '#/components/schemas/UniversalTagKey'
        value:
          description: "The value of the tag. Not applicable to custom tags. \n\n\
            If a tag does have a separate key and value (in the textual representation\
            \ they are split by the colon ‘:’) then this field is set with the actual\
            \ value. Key-value pairs can occur for automatically imported tags and\
            \ tags set by rules if extractors are used."
          type: string
        key:
          description: |-
            The key of the tag. For custom tags, put the tag value here.

            The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags.
          type: string
        context:
          description: "The origin of the tag, like AWS or Cloud Foundry. For custom\
            \ tags use the `CONTEXTLESS` value. \n\nThe context is set for tags which\
            \ are automatically imported by OneAgent (for example from the AWS console\
            \ or environment variables). It’s useful for finding out from where tags\
            \ are originating when not manually defined and it also helps with avoiding\
            \ clashes with other existing tags. If the tag is not automatically imported\
            \ then `CONTEXTLESS` is set."
          enum:
          - CONTEXTLESS
          - AWS
          - ENVIRONMENT
          - CLOUD_FOUNDRY
          - KUBERNETES
          - GOOGLE_COMPUTE_ENGINE
          type: string
      required:
      - key
      type: object
    EventSeverity:
      description: Additional data on the event severity.
      example:
        unit: NanoSecond
        context: CPU_USAGE
        value: 2.3021358869347654518833223846741020679473876953125
      properties:
        context:
          description: The metric used in the event severity calculation.
          enum:
          - CPU_USAGE
          - MEMORY_USAGE
          - NETWORK_HIGH_RECEIVED_UTILIZATION_RATE
          - NETWORK_HIGH_TRANSMITTED_UTILIZATION_RATE
          - NETWORK_RECEIVED_ERROR_RATE
          - NETWORK_TRANSMITTED_ERROR_RATE
          - CPU_READY_TIME
          - MEMORY_SWAP_IN_RATE
          - MEMORY_SWAP_OUT_RATE
          - MEMORY_COMPRESSION_RATE
          - MEMORY_DECOMPRESSION_RATE
          - NETWORK_PACKETS_RECEIVED_DROPPED
          - NETWORK_PACKETS_TRANSMITTED_DROPPED
          - CRASH_RATE
          - PAGE_FAULTS
          - COMMAND_ABORT
          - HYPERVISOR_PACKETS_RECEIVED_DROPPED
          - HYPERVISOR_PACKETS_TRANSMITTED_DROPPED
          - PG_AVAILABLE
          - FAILURE_RATE
          - RESPONSE_TIME_50TH_PERCENTILE
          - RESPONSE_TIME_90TH_PERCENTILE
          type: string
        value:
          description: The value of the severity.
          format: double
          type: number
        unit:
          description: The unit of the severity value.
          enum:
          - NanoSecond
          - MicroSecond
          - MilliSecond
          - Second
          - Minute
          - Hour
          - Bit
          - Byte
          - KiloByte
          - KibiByte
          - MegaByte
          - MebiByte
          - GigaByte
          - GibiByte
          - BytePerSecond
          - BytePerMinute
          - BitPerSecond
          - BitPerMinute
          - KiloBytePerSecond
          - KiloBytePerMinute
          - KibiBytePerSecond
          - KibiBytePerMinute
          - MegaBytePerSecond
          - MegaBytePerMinute
          - MebiBytePerSecond
          - MebiBytePerMinute
          - Ratio
          - Percent
          - Promille
          - Count
          - PerSecond
          - PerMinute
          - State
          - Unspecified
          - NotApplicable
          type: string
      type: object
    ClusterVersion:
      example:
        version: version
      properties:
        version:
          description: The cluster version
          type: string
      type: object
    ProblemStatusResultWrapper:
      example:
        result:
          openProblemCounts: '{}'
          totalOpenProblemsCount: 0
      properties:
        result:
          $ref: '#/components/schemas/GlobalProblemStatus'
      type: object
    Service:
      example:
        serviceType: Unknown
        databaseName: databaseName
        displayName: displayName
        softwareTechnologies:
        - edition: edition
          type: type
          version: version
        - edition: edition
          type: type
          version: version
        webApplicationId: webApplicationId
        className: className
        customizedName: customizedName
        fromRelationships: '{}'
        path: path
        databaseVendor: databaseVendor
        serviceTechnologyTypes:
        - serviceTechnologyTypes
        - serviceTechnologyTypes
        agentTechnologyType: N/A
        toRelationships: '{}'
        webServerName: webServerName
        entityId: entityId
        contextRoot: contextRoot
        discoveredName: discoveredName
        firstSeenTimestamp: 0
        webServiceName: webServiceName
        tags:
        - context: CONTEXTLESS
          value: value
          key: key
        - context: CONTEXTLESS
          value: value
          key: key
        webServiceNamespace: webServiceNamespace
        lastSeenTimestamp: 6
        port: 1
        databaseHostNames:
        - databaseHostNames
        - databaseHostNames
        ipAddresses:
        - ipAddresses
        - ipAddresses
      properties:
        entityId:
          description: "Dynatrace entity ID of the required entity. \n\nYou can find\
            \ them in the URL of the corresponding Dynatrace page, for example, `HOST-007`."
          type: string
        displayName:
          description: The name of the Dynatrace entity, displayed in the UI.
          type: string
        customizedName:
          description: Customized name of the entity
          type: string
        discoveredName:
          description: Discovered name of the entity
          type: string
        firstSeenTimestamp:
          description: Timestamp in UTC milliseconds when the entity was detected for the first time.
          format: int64
          type: integer
        lastSeenTimestamp:
          description: Timestamp in UTC milliseconds when the entity was detected for the last time.
          format: int64
          type: integer
        tags:
          description: The list of entity tags.
          items:
            $ref: '#/components/schemas/TagInfo'
          type: array
          uniqueItems: true
        fromRelationships:
          properties:
            runsOnProcessGroupInstance:
              description: ""
              items:
                type: string
              type: array
            calls:
              description: ""
              items:
                type: string
              type: array
            runsOn:
              description: ""
              items:
                type: string
              type: array
          type: object
        toRelationships:
          properties:
            calls:
              description: ""
              items:
                type: string
              type: array
          type: object
        path:
          description: ""
          type: string
        port:
          description: ""
          format: int32
          type: integer
        softwareTechnologies:
          description: ""
          items:
            $ref: '#/components/schemas/TechnologyInfo'
          type: array
        databaseHostNames:
          description: ""
          items:
            type: string
          type: array
        webServiceName:
          description: ""
          type: string
        databaseName:
          description: ""
          type: string
        serviceTechnologyTypes:
          description: ""
          items:
            type: string
          type: array
        serviceType:
          description: ""
          enum:
          - Unknown
          - WebRequest
          - WebService
          - Database
          - Method
          - WebSite
          - Messaging
          - Mobile
          - Process
          - Rmi
          - External
          - QueueListener
          - QueueInteraction
          - RemoteCall
          - SaasVendor
          - AMP
          - CustomApplication
          - Cics
          type: string
        webServerName:
          description: ""
          type: string
        agentTechnologyType:
          description: ""
          enum:
          - N/A
          - JAVA
          - DOTNET
          - SDK
          - OS
          - APACHE
          - WSMB
          - Z
          - NET
          - IIS
          - PHP
          - NODEJS
          - RUBY
          - NGINX
          - LOG_ANALYTICS
          - VARNISH
          - PLUGIN
          - PROCESS
          - UPDATER
          - GO
          - REMOTE_PLUGIN
          type: string
        webApplicationId:
          description: ""
          type: string
        databaseVendor:
          description: ""
          type: string
        className:
          description: ""
          type: string
        ipAddresses:
          description: ""
          items:
            type: string
          type: array
        webServiceNamespace:
          description: ""
          type: string
        contextRoot:
          description: ""
          type: string
      type: object
    Host:
      example:
        bitness: 32bit
        azureHostNames:
        - azureHostNames
        - azureHostNames
        displayName: displayName
        monitoringMode: OFF
        osArchitecture: X86
        customizedName: customizedName
        fromRelationships: '{}'
        userLevel: SUPERUSER
        osVersion: osVersion
        cloudType: EC2
        osType: WINDOWS
        openstackAvZone: openstackAvZone
        azureSiteNames:
        - azureSiteNames
        - azureSiteNames
        toRelationships: '{}'
        azureSku: FREE
        entityId: entityId
        hypervisorType: VMWARE
        discoveredName: discoveredName
        firstSeenTimestamp: 0
        tags:
        - context: CONTEXTLESS
          value: value
          key: key
        - context: CONTEXTLESS
          value: value
          key: key
        lastSeenTimestamp: 6
        logicalCpuCores: 1
        isMonitoringCandidate: true
        paasMemoryLimit: 5
        consumedHostUnits: consumedHostUnits
        cpuCores: 9
        azureComputeModeName: SHARED
        agentVersion:
          major: 5
          minor: 2
          sourceRevision: sourceRevision
          revision: 7
          timestamp: timestamp
        ipAddresses:
        - ipAddresses
        - ipAddresses
        paasType: AZURE_WEBSITES
      properties:
        entityId:
          description: "Dynatrace entity ID of the required entity. \n\nYou can find\
            \ them in the URL of the corresponding Dynatrace page, for example, `HOST-007`."
          type: string
        displayName:
          description: The name of the Dynatrace entity, displayed in the UI.
          type: string
        customizedName:
          description: Customized name of the entity
          type: string
        discoveredName:
          description: Discovered name of the entity
          type: string
        firstSeenTimestamp:
          description: Timestamp in UTC milliseconds when the entity was detected for the first time.
          format: int64
          type: integer
        lastSeenTimestamp:
          description: Timestamp in UTC milliseconds when the entity was detected for the last time.
          format: int64
          type: integer
        tags:
          description: The list of entity tags.
          items:
            $ref: '#/components/schemas/TagInfo'
          type: array
          uniqueItems: true
        fromRelationships:
          properties:
            isNetworkClientOfHost:
              description: ""
              items:
                type: string
              type: array
          type: object
        toRelationships:
          properties:
            isProcessOf:
              description: ""
              items:
                type: string
              type: array
            isSiteOf:
              description: ""
              items:
                type: string
              type: array
            isNetworkClientOfHost:
              description: ""
              items:
                type: string
              type: array
            runsOn:
              description: ""
              items:
                type: string
              type: array
          type: object
        paasType:
          description: ""
          enum:
          - AZURE_WEBSITES
          - CLOUD_FOUNDRY
          - OPENSHIFT
          - HEROKU
          - KUBERNETES
          - GOOGLE_APP_ENGINE
          - AWS_LAMBDA
          type: string
        osVersion:
          description: ""
          type: string
        userLevel:
          description: ""
          enum:
          - SUPERUSER
          - NON_SUPERUSER
          - NON_SUPERUSER_STRICT
          type: string
        osType:
          description: ""
          enum:
          - WINDOWS
          - LINUX
          - HPUX
          - AIX
          - SOLARIS
          - ZOS
          - DARWIN
          type: string
        logicalCpuCores:
          description: ""
          format: int32
          type: integer
        osArchitecture:
          description: ""
          enum:
          - X86
          - IA64
          - PARISC
          - PPC
          - SPARC
          - S390
          - ARM
          - PPCLE
          type: string
        isMonitoringCandidate:
          description: ""
          type: boolean
        paasMemoryLimit:
          description: ""
          format: int64
          type: integer
        cloudType:
          description: ""
          enum:
          - EC2
          - AZURE
          - OPENSTACK
          - ORACLE
          type: string
        hypervisorType:
          description: ""
          enum:
          - VMWARE
          - XEN
          - HYPERV
          - VIRTUALBOX
          - KVM
          - QEMU
          type: string
        monitoringMode:
          description: ""
          enum:
          - OFF
          - FULL_STACK
          - INFRASTRUCTURE
          type: string
        azureComputeModeName:
          description: ""
          enum:
          - SHARED
          - DEDICATED
          type: string
        bitness:
          description: ""
          enum:
          - 32bit
          - 64bit
          type: string
        agentVersion:
          $ref: '#/components/schemas/AgentVersion'
        openstackAvZone:
          description: ""
          type: string
        ipAddresses:
          description: ""
          items:
            type: string
          type: array
        cpuCores:
          description: ""
          format: int32
          type: integer
        azureHostNames:
          description: ""
          items:
            type: string
          type: array
        azureSiteNames:
          description: ""
          items:
            type: string
          type: array
        consumedHostUnits:
          description: ""
          type: string
        azureSku:
          description: ""
          enum:
          - FREE
          - SHARED
          - BASIC
          - STANDARD
          - PREMIUM
          type: string
      type: object
    AnonymizationProgressResult:
      example:
        progress: 50
      properties:
        progress:
          description: "The progress of the anonymization job, percents. \n\n-1 if\
            \ the job is waiting for execution."
          example: 50
          format: int32
          type: integer
      type: object
    TimeseriesDefinition:
      description: Representation of a metric configuration with all its parameters.
      example:
        displayName: CPU idle
        dimensions:
        - HOST
        unit: Percent
        detailedSource: Infrastructure
        types: []
        aggregationTypes:
        - AVG
        - SUM
        - MIN
        - MAX
        filter: BUILTIN
        timeseriesId: com.dynatrace.builtin:host.cpu.idle
      properties:
        displayName:
          description: The name of the metric in the user interface.
          type: string
        dimensions:
          description: Fine metric division, for example process group and process ID for some process-related metric.
          items:
            type: string
          type: array
        unit:
          description: Units of the metric.
          enum:
          - NanoSecond
          - MicroSecond
          - MilliSecond
          - Second
          - Minute
          - Hour
          - Bit
          - Byte
          - KiloByte
          - KibiByte
          - MegaByte
          - MebiByte
          - GigaByte
          - GibiByte
          - BytePerSecond
          - BytePerMinute
          - BitPerSecond
          - BitPerMinute
          - KiloBytePerSecond
          - KiloBytePerMinute
          - KibiBytePerSecond
          - KibiBytePerMinute
          - MegaBytePerSecond
          - MegaBytePerMinute
          - MebiBytePerSecond
          - MebiBytePerMinute
          - Ratio
          - Percent
          - Promille
          - Count
          - PerSecond
          - PerMinute
          - State
          - Unspecified
          - NotApplicable
          type: string
        detailedSource:
          description: The feature, where the metric originates.
          type: string
        pluginId:
          description: The ID of the plugin, where the metric originates.
          type: string
        types:
          description: Technology type definition. Used to group metrics under a logical technology name.
          items:
            type: string
          type: array
          uniqueItems: true
        aggregationTypes:
          description: The list of allowed aggregations for this metric.
          items:
            enum:
            - MIN
            - MAX
            - SUM
            - AVG
            - MEDIAN
            - COUNT
            - PERCENTILE
            type: string
          type: array
        filter:
          description: The feature, where the metric originates.
          enum:
          - ALL
          - PLUGIN
          - REMOTE_PLUGIN
          - BUILTIN
          - CUSTOM
          type: string
        timeseriesId:
          description: The ID of the metric.
          type: string
      type: object
    UserSessionUserAction:
      description: A user action is a single mouse click or other action performed by the user as part of a user session.
      properties:
        name:
          description: This is usually the page that is loaded as part of the user action, or a textual description of the action, such as a mouse click.
          example: Loading of page /index.html
          type: string
        domain:
          description: The DNS domain that is recorded during this user action.
          type: string
        targetUrl:
          description: The target URL of this user action.
          type: string
        type:
          description: Describes the type of user action recorded.
          enum:
          - Load
          - Xhr
          - Custom
          - Error
          - EndVisit
          - VisitTag
          example: Load
          type: string
        startTime:
          description: The recorded start time for this user action, in milliseconds since the epoch.
          example: 1511363122754
          format: int64
          type: integer
        endTime:
          description: The recorded end time for this user action, in milliseconds since the epoch.
          example: 1511363122754
          format: int64
          type: integer
        duration:
          description: The amount of time between the recorded start time and recorded end time of this user action, in milliseconds.
          example: 122300
          format: int64
          type: integer
        application:
          description: The name of the application, based on the configured detection rules.
          type: string
        internalApplicationId:
          description: The internal ID of the application. This information is useful when calling various REST APIs, for example as a key for time series queries.
          type: string
        speedIndex:
          description: The average time at which visible parts of the page are displayed, in milliseconds.
          example: 122300
          format: int32
          type: integer
        errorCount:
          description: The number of errors detected in this user action.
          format: int32
          type: integer
        apdexCategory:
          description: Shows the user experience performance index level of this user action.
          enum:
          - SATISFIED
          - TOLERATING
          - FRUSTRATED
          - UNKNOWN
          example: SATISFIED, TOLERATING, FRUSTRATED
          type: string
        matchingConversionGoals:
          description: 'Lists user action-based conversion goals that match this user
            session. Note: You can also record conversion goals for the user session.'
          items:
            type: string
          type: array
        networkTime:
          description: The amount of time spent on the network for this user action, in milliseconds.
          example: 122300
          format: int32
          type: integer
        serverTime:
          description: The amount of server-side processing time spent for this user action, in milliseconds.
          example: 122300
          format: int32
          type: integer
        frontendTime:
          description: The amount of frontend rendering time spent for this user action, in milliseconds.
          example: 122300
          format: int32
          type: integer
        documentInteractiveTime:
          description: The amount of time spent until the document for this user action became interactive, in milliseconds.
          example: 122300
          format: int32
          type: integer
        failedImages:
          description: The number of failed image loads in this user action.
          format: int32
          type: integer
        failedXhrRequests:
          description: The number of failed AJAX requests for this user action.
          format: int32
          type: integer
        httpRequestsWithErrors:
          description: The number of HTTP requests for this user action where the response code indicates a failed state.
          format: int32
          type: integer
        thirdPartyResources:
          description: The number of third party resources loaded for this user action.
          format: int32
          type: integer
        thirdPartyBusyTime:
          description: The amount of time spent waiting for third party resources for this user action, in milliseconds.
          example: 122300
          format: int32
          type: integer
        cdnResources:
          description: The number of resources fetched from a CDN for this user action.
          format: int32
          type: integer
        cdnBusyTime:
          description: The amount of time spent waiting for CDN resources for this user action, in milliseconds.
          example: 122300
          format: int32
          type: integer
        firstPartyResources:
          description: The number of resources fetched from the originating server for this user action.
          format: int32
          type: integer
        firstPartyBusyTime:
          description: The amount of time spent waiting for resources from the originating server for this user action, in milliseconds.
          example: 122300
          format: int32
          type: integer
        hasCrash:
          description: Indicates whether this user session includes a crash.
          type: boolean
        domCompleteTime:
          description: The amount of time until the DOM tree completed, in milliseconds.
          example: 122300
          format: int32
          type: integer
        domContentLoadedTime:
          description: The amount of time needed for the DOM tree to load, in milliseconds.
          example: 122300
          format: int32
          type: integer
        loadEventStart:
          description: The amount of time until the load event started, in milliseconds.
          example: 122300
          format: int32
          type: integer
        loadEventEnd:
          description: The amount of time until the load event ended, in milliseconds.
          example: 122300
          format: int32
          type: integer
        navigationStart:
          description: The amount of time until the navigation started, in milliseconds.
          example: 122300
          format: int64
          type: integer
        requestStart:
          description: The amount of time until the request started, in milliseconds.
          example: 122300
          format: int32
          type: integer
        responseStart:
          description: The amount of time until the response started, in milliseconds.
          example: 122300
          format: int32
          type: integer
        responseEnd:
          description: The amount of time until the response ended, in milliseconds.
          example: 122300
          format: int32
          type: integer
        visuallyCompleteTime:
          description: The amount of time until the page is visually complete, in milliseconds.
          example: 122300
          format: int32
          type: integer
      type: object
    ExternalSyntheticEvents:
      description: Pushes updates on open events to Dynatrace or closes previously open events.
      example:
        syntheticEngineName: syntheticEngineName
        open:
        - eventId: eventId
          name: name
          locationIds:
          - locationIds
          - locationIds
          testId: testId
          eventType: testOutage
          startTimestamp: 0
        - eventId: eventId
          name: name
          locationIds:
          - locationIds
          - locationIds
          testId: testId
          eventType: testOutage
          startTimestamp: 0
        resolved:
        - eventId: eventId
          testId: testId
          endTimestamp: 6
        - eventId: eventId
          testId: testId
          endTimestamp: 6
      properties:
        syntheticEngineName:
          description: Synthetic engine name.
          type: string
        open:
          description: Set of open events.
          items:
            $ref: '#/components/schemas/ExternalEventOpenNotification'
          type: array
          uniqueItems: true
        resolved:
          description: Set of resolved events.
          items:
            $ref: '#/components/schemas/ExternalEventResolvedNotification'
          type: array
          uniqueItems: true
      type: object
    Event:
      description: The properties of an event.
      example:
        deploymentProject: deploymentProject
        cpuLimitInMHz: 7
        deploymentParamAdded: deploymentParamAdded
        isClusterWide: true
        source: source
        effectiveEntity: effectiveEntity
        operatingSystem: operatingSystem
        artifact: artifact
        severityLevel: AVAILABILITY
        cpuLoad: 9.301444
        affectedRequestsPerMinute: 3.6160767
        entityName: entityName
        annotationDescription: annotationDescription
        browser: INFRASTRUCTURE
        affectedSyntheticLocations:
        - affectedSyntheticLocations
        - affectedSyntheticLocations
        startTime: 5
        deploymentName: deploymentName
        deploymentParamRemoved: deploymentParamRemoved
        userDefined50thPercentileThreshold: 2.027123
        serviceMethodGroup: serviceMethodGroup
        referenceResponseTime90thPercentile: 4.145608
        isRootCause: true
        userAction: userAction
        minimumProcessGroupInstanceCountThreshold: 7
        referenceResponseTime50thPercentile: 1.2315135
        userDefined90thPercentileThreshold: 1.0246457
        deploymentVersion: deploymentVersion
        annotationType: annotationType
        entityId: entityId
        affectedSyntheticActions:
        - affectedSyntheticActions
        - affectedSyntheticActions
        eventType: CPU_SATURATED
        affectedUserActionsPerMinute: 1.4894159
        activeMaintenanceWindows:
        - activeMaintenanceWindows
        - activeMaintenanceWindows
        mobileAppVersion: mobileAppVersion
        impactLevel: INFRASTRUCTURE
        userDefinedFailureRateThreshold: 6.846853
        percentile: 50th
        customProperties:
          key: customProperties
        remediationAction: remediationAction
        service: service
        endTime: 5
        ciBackLink: ciBackLink
        status: OPEN
        severities:
        - unit: NanoSecond
          context: CPU_USAGE
          value: 2.3021358869347654518833223846741020679473876953125
        - unit: NanoSecond
          context: CPU_USAGE
          value: 2.3021358869347654518833223846741020679473876953125
        geolocation: geolocation
        serviceMethod: serviceMethod
      properties:
        startTime:
          description: Timestamp of the event detection, in UTC milliseconds.
          format: int64
          type: integer
        endTime:
          description: |-
            Timestamp of the event closure, in UTC milliseconds.
             `-1` if the event is still open.
          format: int64
          type: integer
        entityId:
          description: "The ID of the affected Dynatrace entity. \n\n You can find\
            \ the ID in the URL of the corresponding Dynatrace entity page, for example,\
            \ `HOST-007`."
          type: string
        entityName:
          description: The name of the affected Dynatrace entity.
          type: string
        severityLevel:
          description: The severity of the event.
          enum:
          - AVAILABILITY
          - ERROR
          - PERFORMANCE
          - RESOURCE_CONTENTION
          - CUSTOM_ALERT
          - MONITORING_UNAVAILABLE
          type: string
        impactLevel:
          description: The impact level of the event.
          enum:
          - INFRASTRUCTURE
          - SERVICE
          - APPLICATION
          - ENVIRONMENT
          type: string
        eventType:
          description: The type of the event.
          enum:
          - CPU_SATURATED
          - MEMORY_SATURATED
          - SLOW_DISK
          - HIGH_LATENCY
          - INSUFFICIENT_DISK_QUEUE_DEPTH
          - HIGH_GC_ACTIVITY
          - MEMORY_RESOURCES_EXHAUSTED
          - THREADS_RESOURCES_EXHAUSTED
          - HIGH_CONNECTIVITY_FAILURES
          - HIGH_NETWORK_LOSS_RATE
          - PROCESS_CRASHED
          - PROCESS_UNAVAILABLE
          - OVERLOADED_STORAGE
          - HOST_SHUTDOWN
          - HIGH_DROPPED_PACKETS_RATE
          - HIGH_NETWORK_ERROR_RATE
          - HIGH_NETWORK_UTILIZATION
          - LOW_DISK_SPACE
          - CONNECTION_LOST
          - HOST_GRACEFULLY_SHUTDOWN
          - SERVICE_RESPONSE_TIME_DEGRADED
          - FAILURE_RATE_INCREASED
          - UNEXPECTED_HIGH_LOAD
          - UNEXPECTED_LOW_LOAD
          - USER_ACTION_DURATION_DEGRADATION
          - JAVASCRIPT_ERROR_RATE_INCREASED
          - ESXI_START
          - HOST_CONNECTION_LOST
          - HOST_CONNECTION_FAILED
          - HOST_MAINTENANCE
          - HOST_NO_CONNECTION
          - HOST_TIMEOUT
          - VIRTUAL_MACHINE_SHUTDOWN
          - SYNTHETIC_SLOWDOWN
          - WEB_CHECK_GLOBAL_OUTAGE
          - WEB_CHECK_LOCAL_OUTAGE
          - SYNTHETIC_AVAILABILITY
          - ELASTIC_LOAD_BALANCER_HIGH_UNHEALTHY_HOST_RATE
          - ELASTIC_LOAD_BALANCER_HIGH_FAILURE_RATE
          - ELASTIC_LOAD_BALANCER_HIGH_BACKEND_FAILURE_RATE
          - LOW_STORAGE_SPACE
          - EBS_VOLUME_HIGH_LATENCY
          - PROCESS_CUSTOM_AVAILABILITY
          - PROCESS_CUSTOM_ERROR
          - PROCESS_CUSTOM_PERFORMANCE
          - PROCESS_LOG_AVAILABILITY
          - PROCESS_LOG_ERROR
          - PROCESS_LOG_PERFORMANCE
          - LOG_AVAILABILITY
          - LOG_ERROR
          - LOG_PERFORMANCE
          - MOBILE_APP_CRASH_RATE_INCREASED
          - CUSTOM_APP_CRASH_RATE_INCREASED
          - PGI_HAPROXY_QUEUED_REQUESTS_HIGH
          - PGI_HAPROXY_SESSION_USAGE_HIGH
          - PGI_MYSQL_SLOW_QUERIES_RATE_HIGH
          - PGI_OF_SERVICE_UNAVAILABLE
          - HOST_OF_SERVICE_UNAVAILABLE
          - RDS_OF_SERVICE_UNAVAILABLE
          - HOST_LOG_ERROR
          - HOST_LOG_AVAILABILITY
          - HOST_LOG_PERFORMANCE
          - DOCKER_MEMORY_SATURATION
          - OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE
          - OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE
          - HOST_DATASTORE_LOW_DISK_SPACE
          - OPENSTACK_KEYSTONE_UNHEALTHY
          - OPENSTACK_KEYSTONE_SLOW
          - PGI_RMQ_HIGH_MEM_USAGE
          - PGI_RMQ_HIGH_FILE_DESC_USAGE
          - PGI_RMQ_HIGH_SOCKETS_USAGE
          - PGI_RMQ_HIGH_PROCESS_USAGE
          - PGI_RMQ_LOW_DISK_SPACE
          - RDS_RESTART_SEQUENCE
          - LAMBDA_FUNCTION_HIGH_ERROR_RATE
          - CUSTOM_ALERT
          - PROCESS_GROUP_LOW_INSTANCE_COUNT
          - PERFORMANCE_EVENT
          - ERROR_EVENT
          - AVAILABILITY_EVENT
          - RESOURCE_CONTENTION
          - DATABASE_CONNECTION_FAILURE
          - HOST_DISK_LOW_INODES
          - CUSTOM_ANNOTATION
          - CUSTOM_DEPLOYMENT
          - CUSTOM_CONFIGURATION
          - APPLICATION_JS_FRAMEWORK_DETECTED
          - HOST_LOG_MATCHED
          - LOG_MATCHED
          - CUSTOM_INFO
          - MONITORING_UNAVAILABLE
          type: string
        status:
          description: The status of the event.
          enum:
          - OPEN
          - CLOSED
          type: string
        severities:
          description: Additional data on the event severity.
          items:
            $ref: '#/components/schemas/EventSeverity'
          type: array
        isRootCause:
          description: Whether the event is the root cause of the problem.
          type: boolean
        deploymentProject:
          description: ""
          type: string
        cpuLimitInMHz:
          description: ""
          format: int32
          type: integer
        deploymentParamAdded:
          description: ""
          type: string
        isClusterWide:
          description: For events with the event type 'MONITORING_UNAVAILABLE' it may occur that the event is occurring on the entire Dynatrace cluster. If this is true it could be that there are problems on Dynatrace' side.
          type: boolean
        source:
          description: ""
          type: string
        effectiveEntity:
          description: ""
          type: string
        operatingSystem:
          description: ""
          type: string
        artifact:
          description: ""
          type: string
        cpuLoad:
          description: ""
          format: float
          type: number
        affectedRequestsPerMinute:
          description: ""
          format: float
          type: number
        annotationDescription:
          description: ""
          type: string
        browser:
          description: ""
          enum:
          - INFRASTRUCTURE
          - SERVICES
          - APPLICATION
          - ENVIRONMENT
          type: string
        affectedSyntheticLocations:
          description: ""
          items:
            type: string
          type: array
        deploymentName:
          description: ""
          type: string
        deploymentParamRemoved:
          description: ""
          type: string
        userDefined50thPercentileThreshold:
          description: ""
          format: float
          type: number
        serviceMethodGroup:
          description: ""
          type: string
        referenceResponseTime90thPercentile:
          description: ""
          format: float
          type: number
        userAction:
          description: ""
          type: string
        minimumProcessGroupInstanceCountThreshold:
          description: ""
          format: int32
          type: integer
        referenceResponseTime50thPercentile:
          description: ""
          format: float
          type: number
        userDefined90thPercentileThreshold:
          description: ""
          format: float
          type: number
        deploymentVersion:
          description: ""
          type: string
        annotationType:
          description: ""
          type: string
        affectedSyntheticActions:
          description: If the event type is one of the synthetic event types then we may have information which synthetic actions are affected by the event. The names of those are returned in this field.
          items:
            type: string
          type: array
        affectedUserActionsPerMinute:
          description: ""
          format: float
          type: number
        activeMaintenanceWindows:
          description: ""
          items:
            type: string
          type: array
        mobileAppVersion:
          description: ""
          type: string
        userDefinedFailureRateThreshold:
          description: ""
          format: float
          type: number
        percentile:
          description: ""
          enum:
          - 50th
          - 90th
          type: string
        customProperties:
          additionalProperties:
            type: string
          description: ""
          type: object
        remediationAction:
          description: ""
          type: string
        service:
          description: ""
          type: string
        ciBackLink:
          description: ""
          type: string
        geolocation:
          description: ""
          type: string
        serviceMethod:
          description: ""
          type: string
      type: object
    ProblemFeedResultWrapper:
      example:
        result:
          problems:
          - tagsOfAffectedEntities:
            - context: CONTEXTLESS
              value: value
              key: key
            - context: CONTEXTLESS
              value: value
              key: key
            displayName: displayName
            commentCount: 1
            affectedCounts: '{}'
            hasRootCause: true
            impactLevel: INFRASTRUCTURE
            severityLevel: AVAILABILITY
            rankedImpacts:
            - impactLevel: INFRASTRUCTURE
              severityLevel: AVAILABILITY
              entityName: entityName
              entityId: entityId
              eventType: CPU_SATURATED
            - impactLevel: INFRASTRUCTURE
              severityLevel: AVAILABILITY
              entityName: entityName
              entityId: entityId
              eventType: CPU_SATURATED
            recoveredCounts: '{}'
            startTime: 0
            id: id
            endTime: 6
            rankedEvents:
            - deploymentProject: deploymentProject
              cpuLimitInMHz: 7
              deploymentParamAdded: deploymentParamAdded
              isClusterWide: true
              source: source
              effectiveEntity: effectiveEntity
              operatingSystem: operatingSystem
              artifact: artifact
              severityLevel: AVAILABILITY
              cpuLoad: 9.301444
              affectedRequestsPerMinute: 3.6160767
              entityName: entityName
              annotationDescription: annotationDescription
              browser: INFRASTRUCTURE
              affectedSyntheticLocations:
              - affectedSyntheticLocations
              - affectedSyntheticLocations
              startTime: 5
              deploymentName: deploymentName
              deploymentParamRemoved: deploymentParamRemoved
              userDefined50thPercentileThreshold: 2.027123
              serviceMethodGroup: serviceMethodGroup
              referenceResponseTime90thPercentile: 4.145608
              isRootCause: true
              userAction: userAction
              minimumProcessGroupInstanceCountThreshold: 7
              referenceResponseTime50thPercentile: 1.2315135
              userDefined90thPercentileThreshold: 1.0246457
              deploymentVersion: deploymentVersion
              annotationType: annotationType
              entityId: entityId
              affectedSyntheticActions:
              - affectedSyntheticActions
              - affectedSyntheticActions
              eventType: CPU_SATURATED
              affectedUserActionsPerMinute: 1.4894159
              activeMaintenanceWindows:
              - activeMaintenanceWindows
              - activeMaintenanceWindows
              mobileAppVersion: mobileAppVersion
              impactLevel: INFRASTRUCTURE
              userDefinedFailureRateThreshold: 6.846853
              percentile: 50th
              customProperties:
                key: customProperties
              remediationAction: remediationAction
              service: service
              endTime: 5
              ciBackLink: ciBackLink
              status: OPEN
              severities:
              - unit: NanoSecond
                context: CPU_USAGE
                value: 2.3021358869347654518833223846741020679473876953125
              - unit: NanoSecond
                context: CPU_USAGE
                value: 2.3021358869347654518833223846741020679473876953125
              geolocation: geolocation
              serviceMethod: serviceMethod
            - deploymentProject: deploymentProject
              cpuLimitInMHz: 7
              deploymentParamAdded: deploymentParamAdded
              isClusterWide: true
              source: source
              effectiveEntity: effectiveEntity
              operatingSystem: operatingSystem
              artifact: artifact
              severityLevel: AVAILABILITY
              cpuLoad: 9.301444
              affectedRequestsPerMinute: 3.6160767
              entityName: entityName
              annotationDescription: annotationDescription
              browser: INFRASTRUCTURE
              affectedSyntheticLocations:
              - affectedSyntheticLocations
              - affectedSyntheticLocations
              startTime: 5
              deploymentName: deploymentName
              deploymentParamRemoved: deploymentParamRemoved
              userDefined50thPercentileThreshold: 2.027123
              serviceMethodGroup: serviceMethodGroup
              referenceResponseTime90thPercentile: 4.145608
              isRootCause: true
              userAction: userAction
              minimumProcessGroupInstanceCountThreshold: 7
              referenceResponseTime50thPercentile: 1.2315135
              userDefined90thPercentileThreshold: 1.0246457
              deploymentVersion: deploymentVersion
              annotationType: annotationType
              entityId: entityId
              affectedSyntheticActions:
              - affectedSyntheticActions
              - affectedSyntheticActions
              eventType: CPU_SATURATED
              affectedUserActionsPerMinute: 1.4894159
              activeMaintenanceWindows:
              - activeMaintenanceWindows
              - activeMaintenanceWindows
              mobileAppVersion: mobileAppVersion
              impactLevel: INFRASTRUCTURE
              userDefinedFailureRateThreshold: 6.846853
              percentile: 50th
              customProperties:
                key: customProperties
              remediationAction: remediationAction
              service: service
              endTime: 5
              ciBackLink: ciBackLink
              status: OPEN
              severities:
              - unit: NanoSecond
                context: CPU_USAGE
                value: 2.3021358869347654518833223846741020679473876953125
              - unit: NanoSecond
                context: CPU_USAGE
                value: 2.3021358869347654518833223846741020679473876953125
              geolocation: geolocation
              serviceMethod: serviceMethod
            status: OPEN
          - tagsOfAffectedEntities:
            - context: CONTEXTLESS
              value: value
              key: key
            - context: CONTEXTLESS
              value: value
              key: key
            displayName: displayName
            commentCount: 1
            affectedCounts: '{}'
            hasRootCause: true
            impactLevel: INFRASTRUCTURE
            severityLevel: AVAILABILITY
            rankedImpacts:
            - impactLevel: INFRASTRUCTURE
              severityLevel: AVAILABILITY
              entityName: entityName
              entityId: entityId
              eventType: CPU_SATURATED
            - impactLevel: INFRASTRUCTURE
              severityLevel: AVAILABILITY
              entityName: entityName
              entityId: entityId
              eventType: CPU_SATURATED
            recoveredCounts: '{}'
            startTime: 0
            id: id
            endTime: 6
            rankedEvents:
            - deploymentProject: deploymentProject
              cpuLimitInMHz: 7
              deploymentParamAdded: deploymentParamAdded
              isClusterWide: true
              source: source
              effectiveEntity: effectiveEntity
              operatingSystem: operatingSystem
              artifact: artifact
              severityLevel: AVAILABILITY
              cpuLoad: 9.301444
              affectedRequestsPerMinute: 3.6160767
              entityName: entityName
              annotationDescription: annotationDescription
              browser: INFRASTRUCTURE
              affectedSyntheticLocations:
              - affectedSyntheticLocations
              - affectedSyntheticLocations
              startTime: 5
              deploymentName: deploymentName
              deploymentParamRemoved: deploymentParamRemoved
              userDefined50thPercentileThreshold: 2.027123
              serviceMethodGroup: serviceMethodGroup
              referenceResponseTime90thPercentile: 4.145608
              isRootCause: true
              userAction: userAction
              minimumProcessGroupInstanceCountThreshold: 7
              referenceResponseTime50thPercentile: 1.2315135
              userDefined90thPercentileThreshold: 1.0246457
              deploymentVersion: deploymentVersion
              annotationType: annotationType
              entityId: entityId
              affectedSyntheticActions:
              - affectedSyntheticActions
              - affectedSyntheticActions
              eventType: CPU_SATURATED
              affectedUserActionsPerMinute: 1.4894159
              activeMaintenanceWindows:
              - activeMaintenanceWindows
              - activeMaintenanceWindows
              mobileAppVersion: mobileAppVersion
              impactLevel: INFRASTRUCTURE
              userDefinedFailureRateThreshold: 6.846853
              percentile: 50th
              customProperties:
                key: customProperties
              remediationAction: remediationAction
              service: service
              endTime: 5
              ciBackLink: ciBackLink
              status: OPEN
              severities:
              - unit: NanoSecond
                context: CPU_USAGE
                value: 2.3021358869347654518833223846741020679473876953125
              - unit: NanoSecond
                context: CPU_USAGE
                value: 2.3021358869347654518833223846741020679473876953125
              geolocation: geolocation
              serviceMethod: serviceMethod
            - deploymentProject: deploymentProject
              cpuLimitInMHz: 7
              deploymentParamAdded: deploymentParamAdded
              isClusterWide: true
              source: source
              effectiveEntity: effectiveEntity
              operatingSystem: operatingSystem
              artifact: artifact
              severityLevel: AVAILABILITY
              cpuLoad: 9.301444
              affectedRequestsPerMinute: 3.6160767
              entityName: entityName
              annotationDescription: annotationDescription
              browser: INFRASTRUCTURE
              affectedSyntheticLocations:
              - affectedSyntheticLocations
              - affectedSyntheticLocations
              startTime: 5
              deploymentName: deploymentName
              deploymentParamRemoved: deploymentParamRemoved
              userDefined50thPercentileThreshold: 2.027123
              serviceMethodGroup: serviceMethodGroup
              referenceResponseTime90thPercentile: 4.145608
              isRootCause: true
              userAction: userAction
              minimumProcessGroupInstanceCountThreshold: 7
              referenceResponseTime50thPercentile: 1.2315135
              userDefined90thPercentileThreshold: 1.0246457
              deploymentVersion: deploymentVersion
              annotationType: annotationType
              entityId: entityId
              affectedSyntheticActions:
              - affectedSyntheticActions
              - affectedSyntheticActions
              eventType: CPU_SATURATED
              affectedUserActionsPerMinute: 1.4894159
              activeMaintenanceWindows:
              - activeMaintenanceWindows
              - activeMaintenanceWindows
              mobileAppVersion: mobileAppVersion
              impactLevel: INFRASTRUCTURE
              userDefinedFailureRateThreshold: 6.846853
              percentile: 50th
              customProperties:
                key: customProperties
              remediationAction: remediationAction
              service: service
              endTime: 5
              ciBackLink: ciBackLink
              status: OPEN
              severities:
              - unit: NanoSecond
                context: CPU_USAGE
                value: 2.3021358869347654518833223846741020679473876953125
              - unit: NanoSecond
                context: CPU_USAGE
                value: 2.3021358869347654518833223846741020679473876953125
              geolocation: geolocation
              serviceMethod: serviceMethod
            status: OPEN
          monitored: '{}'
      properties:
        result:
          $ref: '#/components/schemas/ProblemFeedQueryResult'
      type: object
    EntityTimeseriesData:
      description: Information about a metric and its data points.
      properties:
        timeseriesId:
          description: Identifier of the metric, where you want to post data points.
          type: string
        dimensions:
          additionalProperties:
            type: string
          description: "Dimensions of the data points you're posting. \n\nThe key\
            \ of the metric dimension must be defined earlier in the metric definition."
          type: object
        dataPoints:
          description: "List of data points. \n\nEach data point is an array, containing\
            \ the timestamp and the value. \n\nTimestamp is UTC milliseconds reported\
            \ as a number, for example: `1520523365557`. \n\nValues can't be reported\
            \ further than 2 hours into the past! \n\nA custom metric must be registered\
            \ **before** you can report a metric value. Therefore, the timestamp for\
            \ reporting a value must be after the registration time of the metric."
          items:
            items:
              format: float
              type: number
            type: array
          type: array
      required:
      - timeseriesId
      type: object
  securitySchemes:
    UserSessionAnonymizationToken:
      description: User Session Anonymization Token to be used in query parameter.
      in: query
      name: Api-Token
      type: apiKey
    MaintenanceWindowToken:
      description: MaintenanceWindow Token to be used in query parameter.
      in: query
      name: Api-Token
      type: apiKey
    ExternalSynthetic:
      description: External Synthetic data Token to be used in query parameter.
      in: query
      name: Api-Token
      type: apiKey
    UserSessionQueryToken:
      description: Access Token for user session queries to be used in query parameter.
      in: query
      name: Api-Token
      type: apiKey
    DataExportToken:
      description: DataExport Token to be used in query parameter.
      in: query
      name: Api-Token
      type: apiKey
