/*
 * Dynatrace Environment API
 *
 * Documentation of the Dynatrace REST API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/section-api) to read about use-cases and examples.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package dtapienv


// A user action is a single mouse click or other action performed by the user as part of a user session.
type UserSessionUserAction struct {
	// This is usually the page that is loaded as part of the user action, or a textual description of the action, such as a mouse click.
	Name string `json:"name,omitempty"`
	// The DNS domain that is recorded during this user action.
	Domain string `json:"domain,omitempty"`
	// The target URL of this user action.
	TargetUrl string `json:"targetUrl,omitempty"`
	// Describes the type of user action recorded.
	Type string `json:"type,omitempty"`
	// The recorded start time for this user action, in milliseconds since the epoch.
	StartTime int64 `json:"startTime,omitempty"`
	// The recorded end time for this user action, in milliseconds since the epoch.
	EndTime int64 `json:"endTime,omitempty"`
	// The amount of time between the recorded start time and recorded end time of this user action, in milliseconds.
	Duration int64 `json:"duration,omitempty"`
	// The name of the application, based on the configured detection rules.
	Application string `json:"application,omitempty"`
	// The internal ID of the application. This information is useful when calling various REST APIs, for example as a key for time series queries.
	InternalApplicationId string `json:"internalApplicationId,omitempty"`
	// The average time at which visible parts of the page are displayed, in milliseconds.
	SpeedIndex int32 `json:"speedIndex,omitempty"`
	// The number of errors detected in this user action.
	ErrorCount int32 `json:"errorCount,omitempty"`
	// Shows the user experience performance index level of this user action.
	ApdexCategory string `json:"apdexCategory,omitempty"`
	// Lists user action-based conversion goals that match this user session. Note: You can also record conversion goals for the user session.
	MatchingConversionGoals []string `json:"matchingConversionGoals,omitempty"`
	// The amount of time spent on the network for this user action, in milliseconds.
	NetworkTime int32 `json:"networkTime,omitempty"`
	// The amount of server-side processing time spent for this user action, in milliseconds.
	ServerTime int32 `json:"serverTime,omitempty"`
	// The amount of frontend rendering time spent for this user action, in milliseconds.
	FrontendTime int32 `json:"frontendTime,omitempty"`
	// The amount of time spent until the document for this user action became interactive, in milliseconds.
	DocumentInteractiveTime int32 `json:"documentInteractiveTime,omitempty"`
	// The number of failed image loads in this user action.
	FailedImages int32 `json:"failedImages,omitempty"`
	// The number of failed AJAX requests for this user action.
	FailedXhrRequests int32 `json:"failedXhrRequests,omitempty"`
	// The number of HTTP requests for this user action where the response code indicates a failed state.
	HttpRequestsWithErrors int32 `json:"httpRequestsWithErrors,omitempty"`
	// The number of third party resources loaded for this user action.
	ThirdPartyResources int32 `json:"thirdPartyResources,omitempty"`
	// The amount of time spent waiting for third party resources for this user action, in milliseconds.
	ThirdPartyBusyTime int32 `json:"thirdPartyBusyTime,omitempty"`
	// The number of resources fetched from a CDN for this user action.
	CdnResources int32 `json:"cdnResources,omitempty"`
	// The amount of time spent waiting for CDN resources for this user action, in milliseconds.
	CdnBusyTime int32 `json:"cdnBusyTime,omitempty"`
	// The number of resources fetched from the originating server for this user action.
	FirstPartyResources int32 `json:"firstPartyResources,omitempty"`
	// The amount of time spent waiting for resources from the originating server for this user action, in milliseconds.
	FirstPartyBusyTime int32 `json:"firstPartyBusyTime,omitempty"`
	// Indicates whether this user session includes a crash.
	HasCrash bool `json:"hasCrash,omitempty"`
	// The amount of time until the DOM tree completed, in milliseconds.
	DomCompleteTime int32 `json:"domCompleteTime,omitempty"`
	// The amount of time needed for the DOM tree to load, in milliseconds.
	DomContentLoadedTime int32 `json:"domContentLoadedTime,omitempty"`
	// The amount of time until the load event started, in milliseconds.
	LoadEventStart int32 `json:"loadEventStart,omitempty"`
	// The amount of time until the load event ended, in milliseconds.
	LoadEventEnd int32 `json:"loadEventEnd,omitempty"`
	// The amount of time until the navigation started, in milliseconds.
	NavigationStart int64 `json:"navigationStart,omitempty"`
	// The amount of time until the request started, in milliseconds.
	RequestStart int32 `json:"requestStart,omitempty"`
	// The amount of time until the response started, in milliseconds.
	ResponseStart int32 `json:"responseStart,omitempty"`
	// The amount of time until the response ended, in milliseconds.
	ResponseEnd int32 `json:"responseEnd,omitempty"`
	// The amount of time until the page is visually complete, in milliseconds.
	VisuallyCompleteTime int32 `json:"visuallyCompleteTime,omitempty"`
}
