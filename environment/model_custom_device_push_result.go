/*
 * Dynatrace Environment API
 *
 * Documentation of the Dynatrace REST API. Refer to the [help page](https://www.dynatrace.com/support/help/shortlink/section-api) to read about use-cases and examples.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package environment


// The result of a custom device push request. The entity id is calculated using internal hashing.
type CustomDevicePushResult struct {
	// Dynatrace entity id for the custom device.  Dynatrace is calculating the id based on the given input: * groupId is set -> groupId and custom device id from the URL path are used to generate the Dynatrace device id; Dynatrace advises to always set the 'groupId' field to get consistent device - group relations  * groupId is not set-> custom device id from the URL path is used to generate the Dynatrace group id (disadvised by Dynatrace as it allows for flaky device - group relations) 
	EntityId string `json:"entityId,omitempty"`
	// Dynatrace entity id for the custom device group.  A custom device group should group custom devices which do the same kind of thing but are separate instances together. One use for the group is service detection, a service id is calculated based on the group id so if you want to share service data for some custom devices they need to be in the same group.  Dynatrace is calculating the id based on the given input: * groupId is set -> groupId is used to generate the Dynatrace group id; Dynatrace advises to always set this field to get consistent device - group relations  * groupId is not set but type is set -> type is used to generate the Dynatrace group id (disadvised by Dynatrace as it allows for flaky device - group relations) * neither groupId nor type is set -> custom device id is used to generate the Dynatrace group id (disadvised by Dynatrace as it allows for flaky device - group relations)  
	GroupId string `json:"groupId,omitempty"`
}
